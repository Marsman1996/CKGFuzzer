{
  "src": {
    "/home/xuhanxiang/project/Fuzzing/oss-fuzz-modified/docker_shared/source_code/libpcap/testprogs/pcap_compile_test.c": {
      "fn_def_list": [],
      "fn_declaraion": [],
      "class_node_list": {},
      "struct_node_list": [],
      "include_list": [],
      "global_variables": [],
      "enumerate_node_list": []
    },
    "/home/xuhanxiang/project/Fuzzing/oss-fuzz-modified/docker_shared/source_code/libpcap/testprogs/can_set_rfmon_test.c": {
      "fn_def_list": [
        {
          "fn_code": "int\nmain(int argc, char **argv)\n{\n\tconst char *cp;\n\tpcap_t *pd;\n\tchar ebuf[PCAP_ERRBUF_SIZE];\n\tint status;\n\n\tif ((cp = strrchr(argv[0], '/')) != NULL)\n\t\tprogram_name = cp + 1;\n\telse\n\t\tprogram_name = argv[0];\n\n\tif (argc != 2) {\n\t\tfprintf(stderr, \"Usage: %s <device>\\n\", program_name);\n\t\treturn 2;\n\t}\n\n\tpd = pcap_create(argv[1], ebuf);\n\tif (pd == NULL)\n\t\terror(\"%s\", ebuf);\n\tstatus = pcap_can_set_rfmon(pd);\n\tif (status < 0) {\n\t\tif (status == PCAP_ERROR)\n\t\t\terror(\"%s: pcap_can_set_rfmon failed: %s\", argv[1],\n\t\t\t    pcap_geterr(pd));\n\t\telse\n\t\t\terror(\"%s: pcap_can_set_rfmon failed: %s\", argv[1],\n\t\t\t    pcap_statustostr(status));\n\t}\n\tprintf(\"%s: Monitor mode %s be set\\n\", argv[1], status ? \"can\" : \"cannot\");\n\treturn 0;\n}",
          "fn_code_pos": [
            [
              43,
              0
            ],
            [
              75,
              1
            ]
          ],
          "class_code": "",
          "class_node_pos": [],
          "fn_meta": {
            "identifier": "main",
            "parameters": {
              "argc": "int",
              "argv": "char"
            },
            "return_type": "int"
          }
        },
        {
          "fn_code": "static void\nerror(const char *fmt, ...)\n{\n\tva_list ap;\n\n\t(void)fprintf(stderr, \"%s: \", program_name);\n\tva_start(ap, fmt);\n\t(void)vfprintf(stderr, fmt, ap);\n\tva_end(ap);\n\tif (*fmt) {\n\t\tfmt += strlen(fmt);\n\t\tif (fmt[-1] != '\\n')\n\t\t\t(void)fputc('\\n', stderr);\n\t}\n\texit(1);\n\t/* NOTREACHED */\n}",
          "fn_code_pos": [
            [
              78,
              0
            ],
            [
              94,
              1
            ]
          ],
          "class_code": "",
          "class_node_pos": [],
          "fn_meta": {
            "identifier": "error",
            "parameters": {
              "fmt": "char"
            },
            "return_type": "void"
          }
        }
      ],
      "fn_declaraion": [
        {
          "fn_code": "PCAP_NORETURN error(PCAP_FORMAT_STRING(const char *), ...)",
          "fn_dec_pos": [
            [
              41,
              12
            ],
            [
              41,
              70
            ]
          ],
          "class_code": "",
          "class_node_pos": [],
          "fn_meta": {
            "identifier": "PCAP_NORETURN error",
            "parameters": {},
            "return_type": "void"
          }
        }
      ],
      "class_node_list": {},
      "struct_node_list": [],
      "include_list": [
        [
          "#include \"varattrs.h\"\n",
          [
            21,
            0
          ],
          [
            22,
            0
          ]
        ],
        [
          "#include <stdio.h>\n",
          [
            29,
            0
          ],
          [
            30,
            0
          ]
        ],
        [
          "#include <stdlib.h>\n",
          [
            30,
            0
          ],
          [
            31,
            0
          ]
        ],
        [
          "#include <string.h>\n",
          [
            31,
            0
          ],
          [
            32,
            0
          ]
        ],
        [
          "#include <stdarg.h>\n",
          [
            32,
            0
          ],
          [
            33,
            0
          ]
        ],
        [
          "#include <pcap.h>\n",
          [
            34,
            0
          ],
          [
            35,
            0
          ]
        ],
        [
          "#include \"pcap/funcattrs.h\"\n",
          [
            36,
            0
          ],
          [
            37,
            0
          ]
        ]
      ],
      "global_variables": [],
      "enumerate_node_list": []
    }
  },
  "head": {
    "/home/xuhanxiang/project/Fuzzing/oss-fuzz-modified/docker_shared/source_code/libpcap/pcap/compiler-tests.h": {
      "fn_def_list": [],
      "fn_declaraion": [],
      "class_node_list": {},
      "struct_node_list": [],
      "include_list": [],
      "global_variables": [],
      "enumerate_node_list": []
    }
  }
}