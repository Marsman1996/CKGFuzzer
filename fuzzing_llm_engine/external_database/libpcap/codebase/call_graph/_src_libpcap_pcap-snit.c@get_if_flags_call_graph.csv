"caller","callee","caller_src","callee_src","start_body_start_line","start_body_end_line","end_body_start_line","end_body_end_line","caller_signature","caller_parameter_string","caller_return_type","caller_return_type_inferred","callee_signature","callee_parameter_string","callee_return_type","callee_return_type_inferred"
"get_if_flags","socket","/src/libpcap/pcap-linux.c","/usr/include/x86_64-linux-gnu/sys/socket.h",2778,2942,113,113,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","socket(int, int, int) -> int","int __domain, int __type, int __protocol","int","int"
"get_if_flags","fscanf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,425,425,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","fscanf(FILE *__restrict__, const char *__restrict__) -> int","FILE *__restrict__ __stream, const char *__restrict__ __format","int","int"
"get_if_flags","fscanf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,443,443,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","fscanf(FILE *__restrict__, const char *__restrict__) -> int","FILE *__restrict__ __stream, const char *__restrict__ __format","int","int"
"get_if_flags","fscanf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,425,425,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","fscanf(FILE *__restrict__, const char *__restrict__) -> int","FILE *__restrict__ __stream, const char *__restrict__ __format","int","int"
"get_if_flags","fscanf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,443,443,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","fscanf(FILE *__restrict__, const char *__restrict__) -> int","FILE *__restrict__ __stream, const char *__restrict__ __format","int","int"
"get_if_flags","snprintf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,6,6,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","snprintf(char *__restrict__, size_t, const char *__restrict__) -> int","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","char","char"
"get_if_flags","snprintf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,6,6,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","snprintf(char *__restrict__, size_t, const char *__restrict__) -> int","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","char","int"
"get_if_flags","snprintf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,6,6,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","snprintf(char *__restrict__, size_t, const char *__restrict__) -> int","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","int","char"
"get_if_flags","snprintf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,6,6,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","snprintf(char *__restrict__, size_t, const char *__restrict__) -> int","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","int","int"
"get_if_flags","snprintf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,6,6,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","snprintf(char *__restrict__, size_t, const char *__restrict__) -> char","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","char","char"
"get_if_flags","snprintf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,6,6,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","snprintf(char *__restrict__, size_t, const char *__restrict__) -> char","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","char","int"
"get_if_flags","snprintf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,6,6,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","snprintf(char *__restrict__, size_t, const char *__restrict__) -> char","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","int","char"
"get_if_flags","snprintf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,6,6,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","snprintf(char *__restrict__, size_t, const char *__restrict__) -> char","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","int","int"
"get_if_flags","snprintf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,386,386,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","snprintf(char *__restrict__, size_t, const char *__restrict__) -> int","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","char","char"
"get_if_flags","snprintf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,386,386,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","snprintf(char *__restrict__, size_t, const char *__restrict__) -> int","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","char","int"
"get_if_flags","snprintf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,386,386,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","snprintf(char *__restrict__, size_t, const char *__restrict__) -> int","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","int","char"
"get_if_flags","snprintf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,386,386,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","snprintf(char *__restrict__, size_t, const char *__restrict__) -> int","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","int","int"
"get_if_flags","snprintf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,386,386,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","snprintf(char *__restrict__, size_t, const char *__restrict__) -> char","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","char","char"
"get_if_flags","snprintf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,386,386,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","snprintf(char *__restrict__, size_t, const char *__restrict__) -> char","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","char","int"
"get_if_flags","snprintf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,386,386,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","snprintf(char *__restrict__, size_t, const char *__restrict__) -> char","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","int","char"
"get_if_flags","snprintf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,386,386,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","snprintf(char *__restrict__, size_t, const char *__restrict__) -> char","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","int","int"
"get_if_flags","snprintf","/src/libpcap/pcap-linux.c","/usr/share/cmake-3.5/Modules/CheckFunctionExists.c",2778,2942,6,6,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","snprintf(char *__restrict__, size_t, const char *__restrict__) -> int","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","char","char"
"get_if_flags","snprintf","/src/libpcap/pcap-linux.c","/usr/share/cmake-3.5/Modules/CheckFunctionExists.c",2778,2942,6,6,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","snprintf(char *__restrict__, size_t, const char *__restrict__) -> int","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","char","int"
"get_if_flags","snprintf","/src/libpcap/pcap-linux.c","/usr/share/cmake-3.5/Modules/CheckFunctionExists.c",2778,2942,6,6,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","snprintf(char *__restrict__, size_t, const char *__restrict__) -> int","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","int","char"
"get_if_flags","snprintf","/src/libpcap/pcap-linux.c","/usr/share/cmake-3.5/Modules/CheckFunctionExists.c",2778,2942,6,6,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","snprintf(char *__restrict__, size_t, const char *__restrict__) -> int","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","int","int"
"get_if_flags","snprintf","/src/libpcap/pcap-linux.c","/usr/share/cmake-3.5/Modules/CheckFunctionExists.c",2778,2942,6,6,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","snprintf(char *__restrict__, size_t, const char *__restrict__) -> char","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","char","char"
"get_if_flags","snprintf","/src/libpcap/pcap-linux.c","/usr/share/cmake-3.5/Modules/CheckFunctionExists.c",2778,2942,6,6,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","snprintf(char *__restrict__, size_t, const char *__restrict__) -> char","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","char","int"
"get_if_flags","snprintf","/src/libpcap/pcap-linux.c","/usr/share/cmake-3.5/Modules/CheckFunctionExists.c",2778,2942,6,6,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","snprintf(char *__restrict__, size_t, const char *__restrict__) -> char","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","int","char"
"get_if_flags","snprintf","/src/libpcap/pcap-linux.c","/usr/share/cmake-3.5/Modules/CheckFunctionExists.c",2778,2942,6,6,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","snprintf(char *__restrict__, size_t, const char *__restrict__) -> char","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","int","int"
"get_if_flags","snprintf","/src/libpcap/pcap-linux.c","/usr/share/cmake-3.5/Modules/CheckFunctionExists.c",2778,2942,386,386,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","snprintf(char *__restrict__, size_t, const char *__restrict__) -> int","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","char","char"
"get_if_flags","snprintf","/src/libpcap/pcap-linux.c","/usr/share/cmake-3.5/Modules/CheckFunctionExists.c",2778,2942,386,386,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","snprintf(char *__restrict__, size_t, const char *__restrict__) -> int","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","char","int"
"get_if_flags","snprintf","/src/libpcap/pcap-linux.c","/usr/share/cmake-3.5/Modules/CheckFunctionExists.c",2778,2942,386,386,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","snprintf(char *__restrict__, size_t, const char *__restrict__) -> int","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","int","char"
"get_if_flags","snprintf","/src/libpcap/pcap-linux.c","/usr/share/cmake-3.5/Modules/CheckFunctionExists.c",2778,2942,386,386,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","snprintf(char *__restrict__, size_t, const char *__restrict__) -> int","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","int","int"
"get_if_flags","snprintf","/src/libpcap/pcap-linux.c","/usr/share/cmake-3.5/Modules/CheckFunctionExists.c",2778,2942,386,386,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","snprintf(char *__restrict__, size_t, const char *__restrict__) -> char","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","char","char"
"get_if_flags","snprintf","/src/libpcap/pcap-linux.c","/usr/share/cmake-3.5/Modules/CheckFunctionExists.c",2778,2942,386,386,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","snprintf(char *__restrict__, size_t, const char *__restrict__) -> char","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","char","int"
"get_if_flags","snprintf","/src/libpcap/pcap-linux.c","/usr/share/cmake-3.5/Modules/CheckFunctionExists.c",2778,2942,386,386,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","snprintf(char *__restrict__, size_t, const char *__restrict__) -> char","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","int","char"
"get_if_flags","snprintf","/src/libpcap/pcap-linux.c","/usr/share/cmake-3.5/Modules/CheckFunctionExists.c",2778,2942,386,386,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","snprintf(char *__restrict__, size_t, const char *__restrict__) -> char","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","int","int"
"get_if_flags","snprintf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,6,6,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","snprintf(char *__restrict__, size_t, const char *__restrict__) -> int","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","char","char"
"get_if_flags","snprintf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,6,6,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","snprintf(char *__restrict__, size_t, const char *__restrict__) -> int","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","char","int"
"get_if_flags","snprintf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,6,6,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","snprintf(char *__restrict__, size_t, const char *__restrict__) -> int","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","int","char"
"get_if_flags","snprintf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,6,6,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","snprintf(char *__restrict__, size_t, const char *__restrict__) -> int","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","int","int"
"get_if_flags","snprintf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,6,6,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","snprintf(char *__restrict__, size_t, const char *__restrict__) -> char","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","char","char"
"get_if_flags","snprintf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,6,6,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","snprintf(char *__restrict__, size_t, const char *__restrict__) -> char","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","char","int"
"get_if_flags","snprintf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,6,6,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","snprintf(char *__restrict__, size_t, const char *__restrict__) -> char","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","int","char"
"get_if_flags","snprintf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,6,6,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","snprintf(char *__restrict__, size_t, const char *__restrict__) -> char","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","int","int"
"get_if_flags","snprintf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,386,386,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","snprintf(char *__restrict__, size_t, const char *__restrict__) -> int","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","char","char"
"get_if_flags","snprintf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,386,386,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","snprintf(char *__restrict__, size_t, const char *__restrict__) -> int","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","char","int"
"get_if_flags","snprintf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,386,386,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","snprintf(char *__restrict__, size_t, const char *__restrict__) -> int","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","int","char"
"get_if_flags","snprintf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,386,386,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","snprintf(char *__restrict__, size_t, const char *__restrict__) -> int","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","int","int"
"get_if_flags","snprintf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,386,386,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","snprintf(char *__restrict__, size_t, const char *__restrict__) -> char","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","char","char"
"get_if_flags","snprintf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,386,386,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","snprintf(char *__restrict__, size_t, const char *__restrict__) -> char","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","char","int"
"get_if_flags","snprintf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,386,386,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","snprintf(char *__restrict__, size_t, const char *__restrict__) -> char","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","int","char"
"get_if_flags","snprintf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,386,386,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","snprintf(char *__restrict__, size_t, const char *__restrict__) -> char","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","int","int"
"get_if_flags","snprintf","/src/libpcap/pcap-linux.c","/usr/share/cmake-3.5/Modules/CheckFunctionExists.c",2778,2942,6,6,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","snprintf(char *__restrict__, size_t, const char *__restrict__) -> int","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","char","char"
"get_if_flags","snprintf","/src/libpcap/pcap-linux.c","/usr/share/cmake-3.5/Modules/CheckFunctionExists.c",2778,2942,6,6,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","snprintf(char *__restrict__, size_t, const char *__restrict__) -> int","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","char","int"
"get_if_flags","snprintf","/src/libpcap/pcap-linux.c","/usr/share/cmake-3.5/Modules/CheckFunctionExists.c",2778,2942,6,6,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","snprintf(char *__restrict__, size_t, const char *__restrict__) -> int","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","int","char"
"get_if_flags","snprintf","/src/libpcap/pcap-linux.c","/usr/share/cmake-3.5/Modules/CheckFunctionExists.c",2778,2942,6,6,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","snprintf(char *__restrict__, size_t, const char *__restrict__) -> int","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","int","int"
"get_if_flags","snprintf","/src/libpcap/pcap-linux.c","/usr/share/cmake-3.5/Modules/CheckFunctionExists.c",2778,2942,6,6,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","snprintf(char *__restrict__, size_t, const char *__restrict__) -> char","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","char","char"
"get_if_flags","snprintf","/src/libpcap/pcap-linux.c","/usr/share/cmake-3.5/Modules/CheckFunctionExists.c",2778,2942,6,6,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","snprintf(char *__restrict__, size_t, const char *__restrict__) -> char","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","char","int"
"get_if_flags","snprintf","/src/libpcap/pcap-linux.c","/usr/share/cmake-3.5/Modules/CheckFunctionExists.c",2778,2942,6,6,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","snprintf(char *__restrict__, size_t, const char *__restrict__) -> char","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","int","char"
"get_if_flags","snprintf","/src/libpcap/pcap-linux.c","/usr/share/cmake-3.5/Modules/CheckFunctionExists.c",2778,2942,6,6,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","snprintf(char *__restrict__, size_t, const char *__restrict__) -> char","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","int","int"
"get_if_flags","snprintf","/src/libpcap/pcap-linux.c","/usr/share/cmake-3.5/Modules/CheckFunctionExists.c",2778,2942,386,386,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","snprintf(char *__restrict__, size_t, const char *__restrict__) -> int","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","char","char"
"get_if_flags","snprintf","/src/libpcap/pcap-linux.c","/usr/share/cmake-3.5/Modules/CheckFunctionExists.c",2778,2942,386,386,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","snprintf(char *__restrict__, size_t, const char *__restrict__) -> int","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","char","int"
"get_if_flags","snprintf","/src/libpcap/pcap-linux.c","/usr/share/cmake-3.5/Modules/CheckFunctionExists.c",2778,2942,386,386,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","snprintf(char *__restrict__, size_t, const char *__restrict__) -> int","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","int","char"
"get_if_flags","snprintf","/src/libpcap/pcap-linux.c","/usr/share/cmake-3.5/Modules/CheckFunctionExists.c",2778,2942,386,386,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","snprintf(char *__restrict__, size_t, const char *__restrict__) -> int","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","int","int"
"get_if_flags","snprintf","/src/libpcap/pcap-linux.c","/usr/share/cmake-3.5/Modules/CheckFunctionExists.c",2778,2942,386,386,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","snprintf(char *__restrict__, size_t, const char *__restrict__) -> char","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","char","char"
"get_if_flags","snprintf","/src/libpcap/pcap-linux.c","/usr/share/cmake-3.5/Modules/CheckFunctionExists.c",2778,2942,386,386,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","snprintf(char *__restrict__, size_t, const char *__restrict__) -> char","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","char","int"
"get_if_flags","snprintf","/src/libpcap/pcap-linux.c","/usr/share/cmake-3.5/Modules/CheckFunctionExists.c",2778,2942,386,386,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","snprintf(char *__restrict__, size_t, const char *__restrict__) -> char","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","int","char"
"get_if_flags","snprintf","/src/libpcap/pcap-linux.c","/usr/share/cmake-3.5/Modules/CheckFunctionExists.c",2778,2942,386,386,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","snprintf(char *__restrict__, size_t, const char *__restrict__) -> char","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","int","int"
"get_if_flags","fopen","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,272,272,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","fopen(const char *__restrict__, const char *__restrict__) -> FILE *","const char *__restrict__ __filename, const char *__restrict__ __modes","FILE *","_IO_FILE *"
"get_if_flags","fclose","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,237,237,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","fclose(FILE *) -> int","FILE * __stream","int","int"
"get_if_flags","pcap_strlcpy","/src/libpcap/pcap-linux.c","/src/libpcap/missing/strlcpy.c",2778,2942,34,34,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","pcap_strlcpy(char *__restrict__, const char *__restrict__, size_t) -> size_t","char *__restrict__ dst, const char *__restrict__ src, size_t dsize","size_t","unsigned long"
"get_if_flags","pcap_fmt_errmsg_for_errno","/src/libpcap/pcap-linux.c","/src/libpcap/fmtutils.c",2778,2942,61,61,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","pcap_fmt_errmsg_for_errno(char *, size_t, int, const char *) -> void","char * errbuf, size_t errbuflen, int errnum, const char * fmt","void","void"
"get_if_flags","free","/src/libpcap/pcap-linux.c","/usr/include/stdlib.h",2778,2942,483,483,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","free(void *) -> void","void * __ptr","void","void"
"get_if_flags","memset","/src/libpcap/pcap-linux.c","/usr/include/string.h",2778,2942,62,62,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","memset(void *, int, size_t) -> void *","void * __s, int __c, size_t __n","void *","void *"
"get_if_flags","close","/src/libpcap/pcap-linux.c","/usr/include/unistd.h",2778,2942,356,356,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","close(int) -> int","int __fd","int","int"
"get_if_flags","__errno_location","/src/libpcap/pcap-linux.c","/usr/include/x86_64-linux-gnu/bits/errno.h",2778,2942,50,50,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","__errno_location() -> int *","","int *","int *"
"get_if_flags","ioctl","/src/libpcap/pcap-linux.c","/usr/include/x86_64-linux-gnu/sys/ioctl.h",2778,2942,41,41,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","ioctl(int, unsigned long) -> int","int __fd, unsigned long __request","int","int"
"get_if_flags","asprintf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,6,6,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","asprintf(char **__restrict__, const char *__restrict__) -> int","char **__restrict__ __ptr, const char *__restrict__ __fmt","char","char"
"get_if_flags","asprintf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,6,6,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","asprintf(char **__restrict__, const char *__restrict__) -> int","char **__restrict__ __ptr, const char *__restrict__ __fmt","char","int"
"get_if_flags","asprintf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,6,6,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","asprintf(char **__restrict__, const char *__restrict__) -> int","char **__restrict__ __ptr, const char *__restrict__ __fmt","int","char"
"get_if_flags","asprintf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,6,6,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","asprintf(char **__restrict__, const char *__restrict__) -> int","char **__restrict__ __ptr, const char *__restrict__ __fmt","int","int"
"get_if_flags","asprintf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,6,6,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","asprintf(char **__restrict__, const char *__restrict__) -> char","char **__restrict__ __ptr, const char *__restrict__ __fmt","char","char"
"get_if_flags","asprintf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,6,6,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","asprintf(char **__restrict__, const char *__restrict__) -> char","char **__restrict__ __ptr, const char *__restrict__ __fmt","char","int"
"get_if_flags","asprintf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,6,6,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","asprintf(char **__restrict__, const char *__restrict__) -> char","char **__restrict__ __ptr, const char *__restrict__ __fmt","int","char"
"get_if_flags","asprintf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,6,6,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","asprintf(char **__restrict__, const char *__restrict__) -> char","char **__restrict__ __ptr, const char *__restrict__ __fmt","int","int"
"get_if_flags","asprintf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,405,405,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","asprintf(char **__restrict__, const char *__restrict__) -> int","char **__restrict__ __ptr, const char *__restrict__ __fmt","char","char"
"get_if_flags","asprintf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,405,405,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","asprintf(char **__restrict__, const char *__restrict__) -> int","char **__restrict__ __ptr, const char *__restrict__ __fmt","char","int"
"get_if_flags","asprintf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,405,405,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","asprintf(char **__restrict__, const char *__restrict__) -> int","char **__restrict__ __ptr, const char *__restrict__ __fmt","int","char"
"get_if_flags","asprintf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,405,405,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","asprintf(char **__restrict__, const char *__restrict__) -> int","char **__restrict__ __ptr, const char *__restrict__ __fmt","int","int"
"get_if_flags","asprintf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,405,405,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","asprintf(char **__restrict__, const char *__restrict__) -> char","char **__restrict__ __ptr, const char *__restrict__ __fmt","char","char"
"get_if_flags","asprintf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,405,405,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","asprintf(char **__restrict__, const char *__restrict__) -> char","char **__restrict__ __ptr, const char *__restrict__ __fmt","char","int"
"get_if_flags","asprintf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,405,405,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","asprintf(char **__restrict__, const char *__restrict__) -> char","char **__restrict__ __ptr, const char *__restrict__ __fmt","int","char"
"get_if_flags","asprintf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,405,405,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","asprintf(char **__restrict__, const char *__restrict__) -> char","char **__restrict__ __ptr, const char *__restrict__ __fmt","int","int"
"get_if_flags","asprintf","/src/libpcap/pcap-linux.c","/usr/share/cmake-3.5/Modules/CheckFunctionExists.c",2778,2942,6,6,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","asprintf(char **__restrict__, const char *__restrict__) -> int","char **__restrict__ __ptr, const char *__restrict__ __fmt","char","char"
"get_if_flags","asprintf","/src/libpcap/pcap-linux.c","/usr/share/cmake-3.5/Modules/CheckFunctionExists.c",2778,2942,6,6,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","asprintf(char **__restrict__, const char *__restrict__) -> int","char **__restrict__ __ptr, const char *__restrict__ __fmt","char","int"
"get_if_flags","asprintf","/src/libpcap/pcap-linux.c","/usr/share/cmake-3.5/Modules/CheckFunctionExists.c",2778,2942,6,6,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","asprintf(char **__restrict__, const char *__restrict__) -> int","char **__restrict__ __ptr, const char *__restrict__ __fmt","int","char"
"get_if_flags","asprintf","/src/libpcap/pcap-linux.c","/usr/share/cmake-3.5/Modules/CheckFunctionExists.c",2778,2942,6,6,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","asprintf(char **__restrict__, const char *__restrict__) -> int","char **__restrict__ __ptr, const char *__restrict__ __fmt","int","int"
"get_if_flags","asprintf","/src/libpcap/pcap-linux.c","/usr/share/cmake-3.5/Modules/CheckFunctionExists.c",2778,2942,6,6,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","asprintf(char **__restrict__, const char *__restrict__) -> char","char **__restrict__ __ptr, const char *__restrict__ __fmt","char","char"
"get_if_flags","asprintf","/src/libpcap/pcap-linux.c","/usr/share/cmake-3.5/Modules/CheckFunctionExists.c",2778,2942,6,6,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","asprintf(char **__restrict__, const char *__restrict__) -> char","char **__restrict__ __ptr, const char *__restrict__ __fmt","char","int"
"get_if_flags","asprintf","/src/libpcap/pcap-linux.c","/usr/share/cmake-3.5/Modules/CheckFunctionExists.c",2778,2942,6,6,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","asprintf(char **__restrict__, const char *__restrict__) -> char","char **__restrict__ __ptr, const char *__restrict__ __fmt","int","char"
"get_if_flags","asprintf","/src/libpcap/pcap-linux.c","/usr/share/cmake-3.5/Modules/CheckFunctionExists.c",2778,2942,6,6,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","asprintf(char **__restrict__, const char *__restrict__) -> char","char **__restrict__ __ptr, const char *__restrict__ __fmt","int","int"
"get_if_flags","asprintf","/src/libpcap/pcap-linux.c","/usr/share/cmake-3.5/Modules/CheckFunctionExists.c",2778,2942,405,405,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","asprintf(char **__restrict__, const char *__restrict__) -> int","char **__restrict__ __ptr, const char *__restrict__ __fmt","char","char"
"get_if_flags","asprintf","/src/libpcap/pcap-linux.c","/usr/share/cmake-3.5/Modules/CheckFunctionExists.c",2778,2942,405,405,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","asprintf(char **__restrict__, const char *__restrict__) -> int","char **__restrict__ __ptr, const char *__restrict__ __fmt","char","int"
"get_if_flags","asprintf","/src/libpcap/pcap-linux.c","/usr/share/cmake-3.5/Modules/CheckFunctionExists.c",2778,2942,405,405,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","asprintf(char **__restrict__, const char *__restrict__) -> int","char **__restrict__ __ptr, const char *__restrict__ __fmt","int","char"
"get_if_flags","asprintf","/src/libpcap/pcap-linux.c","/usr/share/cmake-3.5/Modules/CheckFunctionExists.c",2778,2942,405,405,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","asprintf(char **__restrict__, const char *__restrict__) -> int","char **__restrict__ __ptr, const char *__restrict__ __fmt","int","int"
"get_if_flags","asprintf","/src/libpcap/pcap-linux.c","/usr/share/cmake-3.5/Modules/CheckFunctionExists.c",2778,2942,405,405,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","asprintf(char **__restrict__, const char *__restrict__) -> char","char **__restrict__ __ptr, const char *__restrict__ __fmt","char","char"
"get_if_flags","asprintf","/src/libpcap/pcap-linux.c","/usr/share/cmake-3.5/Modules/CheckFunctionExists.c",2778,2942,405,405,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","asprintf(char **__restrict__, const char *__restrict__) -> char","char **__restrict__ __ptr, const char *__restrict__ __fmt","char","int"
"get_if_flags","asprintf","/src/libpcap/pcap-linux.c","/usr/share/cmake-3.5/Modules/CheckFunctionExists.c",2778,2942,405,405,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","asprintf(char **__restrict__, const char *__restrict__) -> char","char **__restrict__ __ptr, const char *__restrict__ __fmt","int","char"
"get_if_flags","asprintf","/src/libpcap/pcap-linux.c","/usr/share/cmake-3.5/Modules/CheckFunctionExists.c",2778,2942,405,405,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","asprintf(char **__restrict__, const char *__restrict__) -> char","char **__restrict__ __ptr, const char *__restrict__ __fmt","int","int"
"get_if_flags","asprintf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,6,6,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","asprintf(char **__restrict__, const char *__restrict__) -> int","char **__restrict__ __ptr, const char *__restrict__ __fmt","char","char"
"get_if_flags","asprintf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,6,6,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","asprintf(char **__restrict__, const char *__restrict__) -> int","char **__restrict__ __ptr, const char *__restrict__ __fmt","char","int"
"get_if_flags","asprintf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,6,6,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","asprintf(char **__restrict__, const char *__restrict__) -> int","char **__restrict__ __ptr, const char *__restrict__ __fmt","int","char"
"get_if_flags","asprintf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,6,6,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","asprintf(char **__restrict__, const char *__restrict__) -> int","char **__restrict__ __ptr, const char *__restrict__ __fmt","int","int"
"get_if_flags","asprintf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,6,6,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","asprintf(char **__restrict__, const char *__restrict__) -> char","char **__restrict__ __ptr, const char *__restrict__ __fmt","char","char"
"get_if_flags","asprintf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,6,6,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","asprintf(char **__restrict__, const char *__restrict__) -> char","char **__restrict__ __ptr, const char *__restrict__ __fmt","char","int"
"get_if_flags","asprintf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,6,6,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","asprintf(char **__restrict__, const char *__restrict__) -> char","char **__restrict__ __ptr, const char *__restrict__ __fmt","int","char"
"get_if_flags","asprintf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,6,6,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","asprintf(char **__restrict__, const char *__restrict__) -> char","char **__restrict__ __ptr, const char *__restrict__ __fmt","int","int"
"get_if_flags","asprintf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,405,405,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","asprintf(char **__restrict__, const char *__restrict__) -> int","char **__restrict__ __ptr, const char *__restrict__ __fmt","char","char"
"get_if_flags","asprintf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,405,405,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","asprintf(char **__restrict__, const char *__restrict__) -> int","char **__restrict__ __ptr, const char *__restrict__ __fmt","char","int"
"get_if_flags","asprintf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,405,405,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","asprintf(char **__restrict__, const char *__restrict__) -> int","char **__restrict__ __ptr, const char *__restrict__ __fmt","int","char"
"get_if_flags","asprintf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,405,405,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","asprintf(char **__restrict__, const char *__restrict__) -> int","char **__restrict__ __ptr, const char *__restrict__ __fmt","int","int"
"get_if_flags","asprintf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,405,405,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","asprintf(char **__restrict__, const char *__restrict__) -> char","char **__restrict__ __ptr, const char *__restrict__ __fmt","char","char"
"get_if_flags","asprintf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,405,405,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","asprintf(char **__restrict__, const char *__restrict__) -> char","char **__restrict__ __ptr, const char *__restrict__ __fmt","char","int"
"get_if_flags","asprintf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,405,405,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","asprintf(char **__restrict__, const char *__restrict__) -> char","char **__restrict__ __ptr, const char *__restrict__ __fmt","int","char"
"get_if_flags","asprintf","/src/libpcap/pcap-linux.c","/usr/include/stdio.h",2778,2942,405,405,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","asprintf(char **__restrict__, const char *__restrict__) -> char","char **__restrict__ __ptr, const char *__restrict__ __fmt","int","int"
"get_if_flags","asprintf","/src/libpcap/pcap-linux.c","/usr/share/cmake-3.5/Modules/CheckFunctionExists.c",2778,2942,6,6,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","asprintf(char **__restrict__, const char *__restrict__) -> int","char **__restrict__ __ptr, const char *__restrict__ __fmt","char","char"
"get_if_flags","asprintf","/src/libpcap/pcap-linux.c","/usr/share/cmake-3.5/Modules/CheckFunctionExists.c",2778,2942,6,6,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","asprintf(char **__restrict__, const char *__restrict__) -> int","char **__restrict__ __ptr, const char *__restrict__ __fmt","char","int"
"get_if_flags","asprintf","/src/libpcap/pcap-linux.c","/usr/share/cmake-3.5/Modules/CheckFunctionExists.c",2778,2942,6,6,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","asprintf(char **__restrict__, const char *__restrict__) -> int","char **__restrict__ __ptr, const char *__restrict__ __fmt","int","char"
"get_if_flags","asprintf","/src/libpcap/pcap-linux.c","/usr/share/cmake-3.5/Modules/CheckFunctionExists.c",2778,2942,6,6,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","asprintf(char **__restrict__, const char *__restrict__) -> int","char **__restrict__ __ptr, const char *__restrict__ __fmt","int","int"
"get_if_flags","asprintf","/src/libpcap/pcap-linux.c","/usr/share/cmake-3.5/Modules/CheckFunctionExists.c",2778,2942,6,6,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","asprintf(char **__restrict__, const char *__restrict__) -> char","char **__restrict__ __ptr, const char *__restrict__ __fmt","char","char"
"get_if_flags","asprintf","/src/libpcap/pcap-linux.c","/usr/share/cmake-3.5/Modules/CheckFunctionExists.c",2778,2942,6,6,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","asprintf(char **__restrict__, const char *__restrict__) -> char","char **__restrict__ __ptr, const char *__restrict__ __fmt","char","int"
"get_if_flags","asprintf","/src/libpcap/pcap-linux.c","/usr/share/cmake-3.5/Modules/CheckFunctionExists.c",2778,2942,6,6,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","asprintf(char **__restrict__, const char *__restrict__) -> char","char **__restrict__ __ptr, const char *__restrict__ __fmt","int","char"
"get_if_flags","asprintf","/src/libpcap/pcap-linux.c","/usr/share/cmake-3.5/Modules/CheckFunctionExists.c",2778,2942,6,6,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","asprintf(char **__restrict__, const char *__restrict__) -> char","char **__restrict__ __ptr, const char *__restrict__ __fmt","int","int"
"get_if_flags","asprintf","/src/libpcap/pcap-linux.c","/usr/share/cmake-3.5/Modules/CheckFunctionExists.c",2778,2942,405,405,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","asprintf(char **__restrict__, const char *__restrict__) -> int","char **__restrict__ __ptr, const char *__restrict__ __fmt","char","char"
"get_if_flags","asprintf","/src/libpcap/pcap-linux.c","/usr/share/cmake-3.5/Modules/CheckFunctionExists.c",2778,2942,405,405,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","asprintf(char **__restrict__, const char *__restrict__) -> int","char **__restrict__ __ptr, const char *__restrict__ __fmt","char","int"
"get_if_flags","asprintf","/src/libpcap/pcap-linux.c","/usr/share/cmake-3.5/Modules/CheckFunctionExists.c",2778,2942,405,405,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","asprintf(char **__restrict__, const char *__restrict__) -> int","char **__restrict__ __ptr, const char *__restrict__ __fmt","int","char"
"get_if_flags","asprintf","/src/libpcap/pcap-linux.c","/usr/share/cmake-3.5/Modules/CheckFunctionExists.c",2778,2942,405,405,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","asprintf(char **__restrict__, const char *__restrict__) -> int","char **__restrict__ __ptr, const char *__restrict__ __fmt","int","int"
"get_if_flags","asprintf","/src/libpcap/pcap-linux.c","/usr/share/cmake-3.5/Modules/CheckFunctionExists.c",2778,2942,405,405,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","asprintf(char **__restrict__, const char *__restrict__) -> char","char **__restrict__ __ptr, const char *__restrict__ __fmt","char","char"
"get_if_flags","asprintf","/src/libpcap/pcap-linux.c","/usr/share/cmake-3.5/Modules/CheckFunctionExists.c",2778,2942,405,405,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","asprintf(char **__restrict__, const char *__restrict__) -> char","char **__restrict__ __ptr, const char *__restrict__ __fmt","char","int"
"get_if_flags","asprintf","/src/libpcap/pcap-linux.c","/usr/share/cmake-3.5/Modules/CheckFunctionExists.c",2778,2942,405,405,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","asprintf(char **__restrict__, const char *__restrict__) -> char","char **__restrict__ __ptr, const char *__restrict__ __fmt","int","char"
"get_if_flags","asprintf","/src/libpcap/pcap-linux.c","/usr/share/cmake-3.5/Modules/CheckFunctionExists.c",2778,2942,405,405,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","asprintf(char **__restrict__, const char *__restrict__) -> char","char **__restrict__ __ptr, const char *__restrict__ __fmt","int","int"
"get_if_flags","is_wifi","/src/libpcap/pcap-linux.c","/src/libpcap/pcap-linux.c",2778,2942,3196,3196,"get_if_flags(const char *, bpf_u_int32 *, char *) -> int","const char * name, bpf_u_int32 * flags, char * errbuf","int","int","is_wifi(int, const char *) -> int","int sock_fd, const char * device","int","int"
