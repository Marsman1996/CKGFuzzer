"caller","callee","caller_src","callee_src","start_body_start_line","start_body_end_line","end_body_start_line","end_body_end_line","caller_signature","caller_parameter_string","caller_return_type","caller_return_type_inferred","callee_signature","callee_parameter_string","callee_return_type","callee_return_type_inferred"
"iface_ethtool_flag_ioctl","pcap_strlcpy","/src/libpcap/pcap-linux.c","/src/libpcap/missing/strlcpy.c",6803,6829,34,34,"iface_ethtool_flag_ioctl(pcap_t *, int, const char *, int) -> int","pcap_t * handle, int cmd, const char * cmdname, int eperm_ok","int","int","pcap_strlcpy(char *__restrict__, const char *__restrict__, size_t) -> size_t","char *__restrict__ dst, const char *__restrict__ src, size_t dsize","size_t","unsigned long"
"iface_ethtool_flag_ioctl","pcap_fmt_errmsg_for_errno","/src/libpcap/pcap-linux.c","/src/libpcap/fmtutils.c",6803,6829,61,61,"iface_ethtool_flag_ioctl(pcap_t *, int, const char *, int) -> int","pcap_t * handle, int cmd, const char * cmdname, int eperm_ok","int","int","pcap_fmt_errmsg_for_errno(char *, size_t, int, const char *) -> void","char * errbuf, size_t errbuflen, int errnum, const char * fmt","void","void"
"iface_ethtool_flag_ioctl","memset","/src/libpcap/pcap-linux.c","/usr/include/string.h",6803,6829,62,62,"iface_ethtool_flag_ioctl(pcap_t *, int, const char *, int) -> int","pcap_t * handle, int cmd, const char * cmdname, int eperm_ok","int","int","memset(void *, int, size_t) -> void *","void * __s, int __c, size_t __n","void *","void *"
"iface_ethtool_flag_ioctl","__errno_location","/src/libpcap/pcap-linux.c","/usr/include/x86_64-linux-gnu/bits/errno.h",6803,6829,50,50,"iface_ethtool_flag_ioctl(pcap_t *, int, const char *, int) -> int","pcap_t * handle, int cmd, const char * cmdname, int eperm_ok","int","int","__errno_location() -> int *","","int *","int *"
"iface_ethtool_flag_ioctl","ioctl","/src/libpcap/pcap-linux.c","/usr/include/x86_64-linux-gnu/sys/ioctl.h",6803,6829,41,41,"iface_ethtool_flag_ioctl(pcap_t *, int, const char *, int) -> int","pcap_t * handle, int cmd, const char * cmdname, int eperm_ok","int","int","ioctl(int, unsigned long) -> int","int __fd, unsigned long __request","int","int"
