"caller","callee","caller_src","callee_src","start_body_start_line","start_body_end_line","end_body_start_line","end_body_end_line","caller_signature","caller_parameter_string","caller_return_type","caller_return_type_inferred","callee_signature","callee_parameter_string","callee_return_type","callee_return_type_inferred"
"variance_kernel_sse2","_mm_add_epi16","/src/libvpx/vpx_dsp/x86/variance_sse2.c","/usr/local/lib/clang/15.0.0/include/emmintrin.h",48,52,2143,2143,"variance_kernel_sse2(const __m128i, const __m128i, __m128i *const, __m128i *const) -> void","const __m128i src_ptr, const __m128i ref_ptr, __m128i *const sse, __m128i *const sum","void","void","_mm_add_epi16(__m128i, __m128i) -> __m128i","__m128i __a, __m128i __b","__m128i","__attribute((vector_size(16))) long long"
"variance_kernel_sse2","_mm_add_epi32","/src/libvpx/vpx_dsp/x86/variance_sse2.c","/usr/local/lib/clang/15.0.0/include/emmintrin.h",48,52,2165,2165,"variance_kernel_sse2(const __m128i, const __m128i, __m128i *const, __m128i *const) -> void","const __m128i src_ptr, const __m128i ref_ptr, __m128i *const sse, __m128i *const sum","void","void","_mm_add_epi32(__m128i, __m128i) -> __m128i","__m128i __a, __m128i __b","__m128i","__attribute((vector_size(16))) long long"
"variance_kernel_sse2","_mm_sub_epi16","/src/libvpx/vpx_dsp/x86/variance_sse2.c","/usr/local/lib/clang/15.0.0/include/emmintrin.h",48,52,2592,2592,"variance_kernel_sse2(const __m128i, const __m128i, __m128i *const, __m128i *const) -> void","const __m128i src_ptr, const __m128i ref_ptr, __m128i *const sse, __m128i *const sum","void","void","_mm_sub_epi16(__m128i, __m128i) -> __m128i","__m128i __a, __m128i __b","__m128i","__attribute((vector_size(16))) long long"
"variance_kernel_sse2","_mm_madd_epi16","/src/libvpx/vpx_dsp/x86/variance_sse2.c","/usr/local/lib/clang/15.0.0/include/emmintrin.h",48,52,2356,2356,"variance_kernel_sse2(const __m128i, const __m128i, __m128i *const, __m128i *const) -> void","const __m128i src_ptr, const __m128i ref_ptr, __m128i *const sse, __m128i *const sum","void","void","_mm_madd_epi16(__m128i, __m128i) -> __m128i","__m128i __a, __m128i __b","__m128i","__attribute((vector_size(16))) long long"
