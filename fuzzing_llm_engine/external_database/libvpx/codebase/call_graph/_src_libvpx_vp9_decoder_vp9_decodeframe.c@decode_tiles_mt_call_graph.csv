"caller","callee","caller_src","callee_src","start_body_start_line","start_body_end_line","end_body_start_line","end_body_end_line","caller_signature","caller_parameter_string","caller_return_type","caller_return_type_inferred","callee_signature","callee_parameter_string","callee_return_type","callee_return_type_inferred"
"decode_tiles_mt","qsort","/src/libvpx/vp9/decoder/vp9_decodeframe.c","/usr/include/stdlib.h",2446,2573,830,830,"decode_tiles_mt(VP9Decoder *, const uint8_t *, const uint8_t *) -> const uint8_t *","VP9Decoder * pbi, const uint8_t * data, const uint8_t * data_end","const uint8_t *","unsigned char *","qsort(void *, size_t, size_t, __compar_fn_t) -> void","void * __base, size_t __nmemb, size_t __size, __compar_fn_t __compar","void","void"
"decode_tiles_mt","memset","/src/libvpx/vp9/decoder/vp9_decodeframe.c","/usr/include/string.h",2446,2573,61,61,"decode_tiles_mt(VP9Decoder *, const uint8_t *, const uint8_t *) -> const uint8_t *","VP9Decoder * pbi, const uint8_t * data, const uint8_t * data_end","const uint8_t *","unsigned char *","memset(void *, int, size_t) -> void *","void * __s, int __c, size_t __n","void *","void *"
"decode_tiles_mt","memmove","/src/libvpx/vp9/decoder/vp9_decodeframe.c","/usr/include/string.h",2446,2573,47,47,"decode_tiles_mt(VP9Decoder *, const uint8_t *, const uint8_t *) -> const uint8_t *","VP9Decoder * pbi, const uint8_t * data, const uint8_t * data_end","const uint8_t *","unsigned char *","memmove(void *, const void *, size_t) -> void *","void * __dest, const void * __src, size_t __n","void *","void *"
"decode_tiles_mt","__assert_fail","/src/libvpx/vp9/decoder/vp9_decodeframe.c","/usr/include/assert.h",2446,2573,69,69,"decode_tiles_mt(VP9Decoder *, const uint8_t *, const uint8_t *) -> const uint8_t *","VP9Decoder * pbi, const uint8_t * data, const uint8_t * data_end","const uint8_t *","unsigned char *","__assert_fail(const char *, const char *, unsigned int, const char *) -> void","const char * __assertion, const char * __file, unsigned int __line, const char * __function","void","void"
"decode_tiles_mt","get_frame_new_buffer","/src/libvpx/vp9/decoder/vp9_decodeframe.c","/src/libvpx/vp9/common/vp9_onyxc_int.h",2446,2573,327,327,"decode_tiles_mt(VP9Decoder *, const uint8_t *, const uint8_t *) -> const uint8_t *","VP9Decoder * pbi, const uint8_t * data, const uint8_t * data_end","const uint8_t *","unsigned char *","get_frame_new_buffer(VP9_COMMON *) -> YV12_BUFFER_CONFIG *","VP9_COMMON * cm","YV12_BUFFER_CONFIG *","yv12_buffer_config *"
"decode_tiles_mt","vp9_loop_filter_data_reset","/src/libvpx/vp9/decoder/vp9_decodeframe.c","/src/libvpx/vp9/common/vp9_loopfilter.c",2446,2573,1608,1608,"decode_tiles_mt(VP9Decoder *, const uint8_t *, const uint8_t *) -> const uint8_t *","VP9Decoder * pbi, const uint8_t * data, const uint8_t * data_end","const uint8_t *","unsigned char *","vp9_loop_filter_data_reset(LFWorkerData *, YV12_BUFFER_CONFIG *, VP9Common *, const macroblockd_plane[3]) -> void","LFWorkerData * lf_data, YV12_BUFFER_CONFIG * frame_buffer, VP9Common * cm, const macroblockd_plane[3] planes","void","void"
"decode_tiles_mt","vp9_accumulate_frame_counts","/src/libvpx/vp9/decoder/vp9_decodeframe.c","/src/libvpx/vp9/common/vp9_thread_common.c",2446,2573,489,489,"decode_tiles_mt(VP9Decoder *, const uint8_t *, const uint8_t *) -> const uint8_t *","VP9Decoder * pbi, const uint8_t * data, const uint8_t * data_end","const uint8_t *","unsigned char *","vp9_accumulate_frame_counts(FRAME_COUNTS *, const FRAME_COUNTS *, int) -> void","FRAME_COUNTS * accum, const FRAME_COUNTS * counts, int is_dec","void","void"
"decode_tiles_mt","vpx_get_worker_interface","/src/libvpx/vp9/decoder/vp9_decodeframe.c","/src/libvpx/vpx_util/vpx_thread.c",2446,2573,216,216,"decode_tiles_mt(VP9Decoder *, const uint8_t *, const uint8_t *) -> const uint8_t *","VP9Decoder * pbi, const uint8_t * data, const uint8_t * data_end","const uint8_t *","unsigned char *","vpx_get_worker_interface() -> const VPxWorkerInterface *","","const VPxWorkerInterface *","struct <unnamed> *"
"decode_tiles_mt","init_mt","/src/libvpx/vp9/decoder/vp9_decodeframe.c","/src/libvpx/vp9/decoder/vp9_decodeframe.c",2446,2573,2281,2281,"decode_tiles_mt(VP9Decoder *, const uint8_t *, const uint8_t *) -> const uint8_t *","VP9Decoder * pbi, const uint8_t * data, const uint8_t * data_end","const uint8_t *","unsigned char *","init_mt(VP9Decoder *) -> void","VP9Decoder * pbi","void","void"
"decode_tiles_mt","get_tile_buffers","/src/libvpx/vp9/decoder/vp9_decodeframe.c","/src/libvpx/vp9/decoder/vp9_decodeframe.c",2446,2573,1684,1684,"decode_tiles_mt(VP9Decoder *, const uint8_t *, const uint8_t *) -> const uint8_t *","VP9Decoder * pbi, const uint8_t * data, const uint8_t * data_end","const uint8_t *","unsigned char *","get_tile_buffers(VP9Decoder *, const uint8_t *, const uint8_t *, int, int, TileBuffer(*)[64]) -> void","VP9Decoder * pbi, const uint8_t * data, const uint8_t * data_end, int tile_cols, int tile_rows, TileBuffer(*)[64] tile_buffers","void","void"
"decode_tiles_mt","launch","/src/libvpx/vp9/decoder/vp9_decodeframe.c","/src/libvpx/vpx_util/vpx_thread.c",2446,2573,175,175,"decode_tiles_mt(VP9Decoder *, const uint8_t *, const uint8_t *) -> const uint8_t *","VP9Decoder * pbi, const uint8_t * data, const uint8_t * data_end","const uint8_t *","unsigned char *","launch(VPxWorker *const) -> void","VPxWorker *const worker","void","void"
"decode_tiles_mt","execute","/src/libvpx/vp9/decoder/vp9_decodeframe.c","/src/libvpx/vpx_util/vpx_thread.c",2446,2573,169,169,"decode_tiles_mt(VP9Decoder *, const uint8_t *, const uint8_t *) -> const uint8_t *","VP9Decoder * pbi, const uint8_t * data, const uint8_t * data_end","const uint8_t *","unsigned char *","execute(VPxWorker *const) -> void","VPxWorker *const worker","void","void"
"decode_tiles_mt","sync","/src/libvpx/vp9/decoder/vp9_decodeframe.c","/src/libvpx/vpx_util/vpx_thread.c",2446,2573,123,123,"decode_tiles_mt(VP9Decoder *, const uint8_t *, const uint8_t *) -> const uint8_t *","VP9Decoder * pbi, const uint8_t * data, const uint8_t * data_end","const uint8_t *","unsigned char *","sync(VPxWorker *const) -> int","VPxWorker *const worker","int","int"
