"caller","callee","caller_src","callee_src","start_body_start_line","start_body_end_line","end_body_start_line","end_body_end_line","caller_signature","caller_parameter_string","caller_return_type","caller_return_type_inferred","callee_signature","callee_parameter_string","callee_return_type","callee_return_type_inferred"
"read_skip","segfeature_active","/src/libvpx/vp9/decoder/vp9_decodemv.c","/src/libvpx/vp9/common/vp9_seg_common.h",180,190,57,57,"read_skip(VP9_COMMON *, const MACROBLOCKD *, int, vpx_reader *) -> int","VP9_COMMON * cm, const MACROBLOCKD * xd, int segment_id, vpx_reader * r","int","int","segfeature_active(const segmentation *, int, SEG_LVL_FEATURES) -> int","const segmentation * seg, int segment_id, SEG_LVL_FEATURES feature_id","int","int"
"read_skip","vpx_read","/src/libvpx/vp9/decoder/vp9_decodemv.c","/src/libvpx/vpx_dsp/bitreader.h",180,190,77,77,"read_skip(VP9_COMMON *, const MACROBLOCKD *, int, vpx_reader *) -> int","VP9_COMMON * cm, const MACROBLOCKD * xd, int segment_id, vpx_reader * r","int","int","vpx_read(vpx_reader *, int) -> int","vpx_reader * r, int prob","int","int"
"read_skip","vp9_get_skip_context","/src/libvpx/vp9/decoder/vp9_decodemv.c","/src/libvpx/vp9/common/vp9_pred_common.h",180,190,55,55,"read_skip(VP9_COMMON *, const MACROBLOCKD *, int, vpx_reader *) -> int","VP9_COMMON * cm, const MACROBLOCKD * xd, int segment_id, vpx_reader * r","int","int","vp9_get_skip_context(const MACROBLOCKD *) -> int","const MACROBLOCKD * xd","int","int"
