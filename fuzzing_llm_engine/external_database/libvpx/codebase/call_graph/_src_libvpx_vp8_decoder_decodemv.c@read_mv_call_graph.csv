"caller","callee","caller_src","callee_src","start_body_start_line","start_body_end_line","end_body_start_line","end_body_end_line","caller_signature","caller_parameter_string","caller_return_type","caller_return_type_inferred","callee_signature","callee_parameter_string","callee_return_type","callee_return_type_inferred"
"read_mv","read_mvcomponent","/src/libvpx/vp8/decoder/decodemv.c","/src/libvpx/vp8/decoder/decodemv.c",91,94,64,64,"read_mv(vp8_reader *, MV *, const MV_CONTEXT *) -> void","vp8_reader * r, MV * mv, const MV_CONTEXT * mvc","void","void","read_mvcomponent(vp8_reader *, const MV_CONTEXT *) -> int","vp8_reader * r, const MV_CONTEXT * mvc","int","int"
"read_mv","vp9_inc_mv","/src/libvpx/vp9/decoder/vp9_decodemv.c","/src/libvpx/vp9/common/vp9_entropymv.c",269,285,139,139,"read_mv(vpx_reader *, MV *, const MV *, const nmv_context *, nmv_context_counts *, int) -> void","vpx_reader * r, MV * mv, const MV * ref, const nmv_context * ctx, nmv_context_counts * counts, int allow_hp","void","void","vp9_inc_mv(const MV *, nmv_context_counts *) -> void","const MV * mv, nmv_context_counts * counts","void","void"
"read_mv","mv_joint_vertical","/src/libvpx/vp9/decoder/vp9_decodemv.c","/src/libvpx/vp9/common/vp9_entropymv.h",269,285,46,46,"read_mv(vpx_reader *, MV *, const MV *, const nmv_context *, nmv_context_counts *, int) -> void","vpx_reader * r, MV * mv, const MV * ref, const nmv_context * ctx, nmv_context_counts * counts, int allow_hp","void","void","mv_joint_vertical(MV_JOINT_TYPE) -> int","MV_JOINT_TYPE type","int","int"
"read_mv","mv_joint_horizontal","/src/libvpx/vp9/decoder/vp9_decodemv.c","/src/libvpx/vp9/common/vp9_entropymv.h",269,285,50,50,"read_mv(vpx_reader *, MV *, const MV *, const nmv_context *, nmv_context_counts *, int) -> void","vpx_reader * r, MV * mv, const MV * ref, const nmv_context * ctx, nmv_context_counts * counts, int allow_hp","void","void","mv_joint_horizontal(MV_JOINT_TYPE) -> int","MV_JOINT_TYPE type","int","int"
"read_mv","vpx_read_tree","/src/libvpx/vp9/decoder/vp9_decodemv.c","/src/libvpx/vpx_dsp/bitreader.h",269,285,150,150,"read_mv(vpx_reader *, MV *, const MV *, const nmv_context *, nmv_context_counts *, int) -> void","vpx_reader * r, MV * mv, const MV * ref, const nmv_context * ctx, nmv_context_counts * counts, int allow_hp","void","void","vpx_read_tree(vpx_reader *, const vpx_tree_index *, const vpx_prob *) -> int","vpx_reader * r, const vpx_tree_index * tree, const vpx_prob * probs","int","int"
"read_mv","use_mv_hp","/src/libvpx/vp9/decoder/vp9_decodemv.c","/src/libvpx/vp9/common/vp9_entropymv.h",269,285,30,30,"read_mv(vpx_reader *, MV *, const MV *, const nmv_context *, nmv_context_counts *, int) -> void","vpx_reader * r, MV * mv, const MV * ref, const nmv_context * ctx, nmv_context_counts * counts, int allow_hp","void","void","use_mv_hp(const MV *) -> int","const MV * ref","int","int"
"read_mv","read_mv_component","/src/libvpx/vp9/decoder/vp9_decodemv.c","/src/libvpx/vp9/decoder/vp9_decodemv.c",269,285,235,235,"read_mv(vpx_reader *, MV *, const MV *, const nmv_context *, nmv_context_counts *, int) -> void","vpx_reader * r, MV * mv, const MV * ref, const nmv_context * ctx, nmv_context_counts * counts, int allow_hp","void","void","read_mv_component(vpx_reader *, const nmv_component *, int) -> int","vpx_reader * r, const nmv_component * mvcomp, int usehp","int","int"
