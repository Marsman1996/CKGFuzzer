"caller","callee","caller_src","callee_src","start_body_start_line","start_body_end_line","end_body_start_line","end_body_end_line","caller_signature","caller_parameter_string","caller_return_type","caller_return_type_inferred","callee_signature","callee_parameter_string","callee_return_type","callee_return_type_inferred"
"variance_final_128_pel_sse2","__builtin_ia32_psrldqi128_byteshift","/src/libvpx/vpx_dsp/x86/variance_sse2.c","",58,65,0,0,"variance_final_128_pel_sse2(__m128i, __m128i, unsigned int *const, int *const) -> void","__m128i vsse, __m128i vsum, unsigned int *const sse, int *const sum","void","void","__builtin_ia32_psrldqi128_byteshift(__attribute((vector_size(16))) long long, int) -> __attribute((vector_size(16))) long long","__attribute((vector_size(16))) long long (unnamed parameter 0), int (unnamed parameter 1)","__attribute((vector_size(16))) long long","__attribute((vector_size(16))) long long"
"variance_final_128_pel_sse2","_mm_add_epi16","/src/libvpx/vpx_dsp/x86/variance_sse2.c","/usr/local/lib/clang/15.0.0/include/emmintrin.h",58,65,2143,2143,"variance_final_128_pel_sse2(__m128i, __m128i, unsigned int *const, int *const) -> void","__m128i vsse, __m128i vsum, unsigned int *const sse, int *const sum","void","void","_mm_add_epi16(__m128i, __m128i) -> __m128i","__m128i __a, __m128i __b","__m128i","__attribute((vector_size(16))) long long"
"variance_final_128_pel_sse2","__builtin_ia32_vec_ext_v8hi","/src/libvpx/vpx_dsp/x86/variance_sse2.c","",58,65,0,0,"variance_final_128_pel_sse2(__m128i, __m128i, unsigned int *const, int *const) -> void","__m128i vsse, __m128i vsum, unsigned int *const sse, int *const sum","void","void","__builtin_ia32_vec_ext_v8hi(__attribute((vector_size(16))) short, int) -> short","__attribute((vector_size(16))) short (unnamed parameter 0), int (unnamed parameter 1)","short","short"
"variance_final_128_pel_sse2","add32x4_sse2","/src/libvpx/vpx_dsp/x86/variance_sse2.c","/src/libvpx/vpx_dsp/x86/variance_sse2.c",58,65,19,19,"variance_final_128_pel_sse2(__m128i, __m128i, unsigned int *const, int *const) -> void","__m128i vsse, __m128i vsum, unsigned int *const sse, int *const sum","void","void","add32x4_sse2(__m128i) -> unsigned int","__m128i val","unsigned int","unsigned int"
