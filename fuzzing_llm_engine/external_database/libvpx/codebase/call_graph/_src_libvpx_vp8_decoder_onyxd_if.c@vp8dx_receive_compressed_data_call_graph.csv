"caller","callee","caller_src","callee_src","start_body_start_line","start_body_end_line","end_body_start_line","end_body_end_line","caller_signature","caller_parameter_string","caller_return_type","caller_return_type_inferred","callee_signature","callee_parameter_string","callee_return_type","callee_return_type_inferred"
"vp8dx_receive_compressed_data","memcpy","/src/libvpx/vp8/decoder/onyxd_if.c","/usr/include/string.h",305,375,43,43,"vp8dx_receive_compressed_data(VP8D_COMP *) -> int","VP8D_COMP * pbi","int","int","memcpy(void *__restrict__, const void *__restrict__, size_t) -> void *","void *__restrict__ __dest, const void *__restrict__ __src, size_t __n","void *","void *"
"vp8dx_receive_compressed_data","vpx_clear_system_state","/src/libvpx/vp8/decoder/onyxd_if.c","/src/libvpx/vpx_ports/system_state.h",305,375,21,21,"vp8dx_receive_compressed_data(VP8D_COMP *) -> int","VP8D_COMP * pbi","int","int","vpx_clear_system_state() -> void","","void","void"
"vp8dx_receive_compressed_data","vp8_decode_frame","/src/libvpx/vp8/decoder/onyxd_if.c","/src/libvpx/vp8/decoder/decodeframe.c",305,375,879,879,"vp8dx_receive_compressed_data(VP8D_COMP *) -> int","VP8D_COMP * pbi","int","int","vp8_decode_frame(VP8D_COMP *) -> int","VP8D_COMP * pbi","int","int"
"vp8dx_receive_compressed_data","check_fragments_for_errors","/src/libvpx/vp8/decoder/onyxd_if.c","/src/libvpx/vp8/decoder/onyxd_if.c",305,375,270,270,"vp8dx_receive_compressed_data(VP8D_COMP *) -> int","VP8D_COMP * pbi","int","int","check_fragments_for_errors(VP8D_COMP *) -> int","VP8D_COMP * pbi","int","int"
"vp8dx_receive_compressed_data","get_free_fb","/src/libvpx/vp8/decoder/onyxd_if.c","/src/libvpx/vp8/decoder/onyxd_if.c",305,375,193,193,"vp8dx_receive_compressed_data(VP8D_COMP *) -> int","VP8D_COMP * pbi","int","int","get_free_fb(VP8_COMMON *) -> int","VP8_COMMON * cm","int","int"
"vp8dx_receive_compressed_data","swap_frame_buffers","/src/libvpx/vp8/decoder/onyxd_if.c","/src/libvpx/vp8/decoder/onyxd_if.c",305,375,213,213,"vp8dx_receive_compressed_data(VP8D_COMP *) -> int","VP8D_COMP * pbi","int","int","swap_frame_buffers(VP8_COMMON *) -> int","VP8_COMMON * cm","int","int"
