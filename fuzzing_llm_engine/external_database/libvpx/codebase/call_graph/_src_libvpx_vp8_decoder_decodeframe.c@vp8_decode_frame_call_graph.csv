"caller","callee","caller_src","callee_src","start_body_start_line","start_body_end_line","end_body_start_line","end_body_end_line","caller_signature","caller_parameter_string","caller_return_type","caller_return_type_inferred","callee_signature","callee_parameter_string","callee_return_type","callee_return_type_inferred"
"vp8_decode_frame","memset","/src/libvpx/vp8/decoder/decodeframe.c","/usr/include/string.h",879,1263,61,61,"vp8_decode_frame(VP8D_COMP *) -> int","VP8D_COMP * pbi","int","int","memset(void *, int, size_t) -> void *","void * __s, int __c, size_t __n","void *","void *"
"vp8_decode_frame","memcpy","/src/libvpx/vp8/decoder/decodeframe.c","/usr/include/string.h",879,1263,43,43,"vp8_decode_frame(VP8D_COMP *) -> int","VP8D_COMP * pbi","int","int","memcpy(void *__restrict__, const void *__restrict__, size_t) -> void *","void *__restrict__ __dest, const void *__restrict__ __src, size_t __n","void *","void *"
"vp8_decode_frame","vp8_setup_version","/src/libvpx/vp8/decoder/decodeframe.c","/src/libvpx/vp8/common/alloccommon.c",879,1263,130,130,"vp8_decode_frame(VP8D_COMP *) -> int","VP8D_COMP * pbi","int","int","vp8_setup_version(VP8_COMMON *) -> void","VP8_COMMON * cm","void","void"
"vp8_decode_frame","vpx_internal_error","/src/libvpx/vp8/decoder/decodeframe.c","/src/libvpx/vpx/src/vpx_codec.c",879,1263,116,116,"vp8_decode_frame(VP8D_COMP *) -> int","VP8D_COMP * pbi","int","int","vpx_internal_error(vpx_internal_error_info *, vpx_codec_err_t, const char *) -> void","vpx_internal_error_info * info, vpx_codec_err_t error, const char * fmt","void","void"
"vp8_decode_frame","vp8dx_bool_error","/src/libvpx/vp8/decoder/decodeframe.c","/src/libvpx/vp8/decoder/dboolhuff.h",879,1263,104,104,"vp8_decode_frame(VP8D_COMP *) -> int","VP8D_COMP * pbi","int","int","vp8dx_bool_error(BOOL_DECODER *) -> int","BOOL_DECODER * br","int","int"
"vp8_decode_frame","vp8_decode_value","/src/libvpx/vp8/decoder/decodeframe.c","/src/libvpx/vp8/decoder/dboolhuff.h",879,1263,93,93,"vp8_decode_frame(VP8D_COMP *) -> int","VP8D_COMP * pbi","int","int","vp8_decode_value(BOOL_DECODER *, int) -> int","BOOL_DECODER * br, int bits","int","int"
"vp8_decode_frame","vp8dx_decode_bool","/src/libvpx/vp8/decoder/decodeframe.c","/src/libvpx/vp8/decoder/dboolhuff.h",879,1263,54,54,"vp8_decode_frame(VP8D_COMP *) -> int","VP8D_COMP * pbi","int","int","vp8dx_decode_bool(BOOL_DECODER *, int) -> int","BOOL_DECODER * br, int probability","int","int"
"vp8_decode_frame","vp8dx_start_decode","/src/libvpx/vp8/decoder/decodeframe.c","/src/libvpx/vp8/decoder/dboolhuff.c",879,1263,15,15,"vp8_decode_frame(VP8D_COMP *) -> int","VP8D_COMP * pbi","int","int","vp8dx_start_decode(BOOL_DECODER *, const unsigned char *, unsigned int, vpx_decrypt_cb, void *) -> int","BOOL_DECODER * br, const unsigned char * source, unsigned int source_sz, vpx_decrypt_cb decrypt_cb, void * decrypt_state","int","int"
"vp8_decode_frame","init_frame","/src/libvpx/vp8/decoder/decodeframe.c","/src/libvpx/vp8/decoder/decodeframe.c",879,1263,818,818,"vp8_decode_frame(VP8D_COMP *) -> int","VP8D_COMP * pbi","int","int","init_frame(VP8D_COMP *) -> void","VP8D_COMP * pbi","void","void"
"vp8_decode_frame","setup_token_decoder","/src/libvpx/vp8/decoder/decodeframe.c","/src/libvpx/vp8/decoder/decodeframe.c",879,1263,728,728,"vp8_decode_frame(VP8D_COMP *) -> int","VP8D_COMP * pbi","int","int","setup_token_decoder(VP8D_COMP *, const unsigned char *) -> void","VP8D_COMP * pbi, const unsigned char * token_part_sizes","void","void"
"vp8_decode_frame","get_delta_q","/src/libvpx/vp8/decoder/decodeframe.c","/src/libvpx/vp8/decoder/decodeframe.c",879,1263,235,235,"vp8_decode_frame(VP8D_COMP *) -> int","VP8D_COMP * pbi","int","int","get_delta_q(vp8_reader *, int, int *) -> int","vp8_reader * bc, int prev, int * q_update","int","int"
"vp8_decode_frame","vp8cx_init_de_quantizer","/src/libvpx/vp8/decoder/decodeframe.c","/src/libvpx/vp8/decoder/decodeframe.c",879,1263,42,42,"vp8_decode_frame(VP8D_COMP *) -> int","VP8D_COMP * pbi","int","int","vp8cx_init_de_quantizer(VP8D_COMP *) -> void","VP8D_COMP * pbi","void","void"
"vp8_decode_frame","vp8_mb_init_dequantizer","/src/libvpx/vp8/decoder/decodeframe.c","/src/libvpx/vp8/decoder/decodeframe.c",879,1263,57,57,"vp8_decode_frame(VP8D_COMP *) -> int","VP8D_COMP * pbi","int","int","vp8_mb_init_dequantizer(VP8D_COMP *, MACROBLOCKD *) -> void","VP8D_COMP * pbi, MACROBLOCKD * xd","void","void"
"vp8_decode_frame","vp8_decode_mode_mvs","/src/libvpx/vp8/decoder/decodeframe.c","/src/libvpx/vp8/decoder/decodemv.c",879,1263,516,516,"vp8_decode_frame(VP8D_COMP *) -> int","VP8D_COMP * pbi","int","int","vp8_decode_mode_mvs(VP8D_COMP *) -> void","VP8D_COMP * pbi","void","void"
"vp8_decode_frame","vpx_atomic_load_acquire","/src/libvpx/vp8/decoder/decodeframe.c","/src/libvpx/vpx_util/vpx_atomics.h",879,1263,92,92,"vp8_decode_frame(VP8D_COMP *) -> int","VP8D_COMP * pbi","int","int","vpx_atomic_load_acquire(const vpx_atomic_int *) -> int","const vpx_atomic_int * atomic","int","int"
"vp8_decode_frame","vp8mt_decode_mb_rows","/src/libvpx/vp8/decoder/decodeframe.c","/src/libvpx/vp8/decoder/threading.c",879,1263,845,845,"vp8_decode_frame(VP8D_COMP *) -> int","VP8D_COMP * pbi","int","int","vp8mt_decode_mb_rows(VP8D_COMP *, MACROBLOCKD *) -> int","VP8D_COMP * pbi, MACROBLOCKD * xd","int","int"
"vp8_decode_frame","vp8_decoder_remove_threads","/src/libvpx/vp8/decoder/decodeframe.c","/src/libvpx/vp8/decoder/threading.c",879,1263,809,809,"vp8_decode_frame(VP8D_COMP *) -> int","VP8D_COMP * pbi","int","int","vp8_decoder_remove_threads(VP8D_COMP *) -> void","VP8D_COMP * pbi","void","void"
"vp8_decode_frame","vp8_yv12_extend_frame_borders_c","/src/libvpx/vp8/decoder/decodeframe.c","/src/libvpx/vpx_scale/generic/yv12extend.c",879,1263,105,105,"vp8_decode_frame(VP8D_COMP *) -> int","VP8D_COMP * pbi","int","int","vp8_yv12_extend_frame_borders_c(YV12_BUFFER_CONFIG *, yv12_buffer_config *) -> void","YV12_BUFFER_CONFIG * ybf","void","void"
"vp8_decode_frame","decode_mb_rows","/src/libvpx/vp8/decoder/decodeframe.c","/src/libvpx/vp8/decoder/decodeframe.c",879,1263,436,436,"vp8_decode_frame(VP8D_COMP *) -> int","VP8D_COMP * pbi","int","int","decode_mb_rows(VP8D_COMP *) -> void","VP8D_COMP * pbi","void","void"
