"caller","callee","caller_src","callee_src","start_body_start_line","start_body_end_line","end_body_start_line","end_body_end_line","caller_signature","caller_parameter_string","caller_return_type","caller_return_type_inferred","callee_signature","callee_parameter_string","callee_return_type","callee_return_type_inferred"
"vp9_loop_filter_frame_init","memset","/src/libvpx/vp9/common/vp9_loopfilter.c","/usr/include/string.h",252,295,61,61,"vp9_loop_filter_frame_init(VP9Common *, VP9_COMMON *, int) -> void","VP9Common * cm, int default_filt_lvl","void","void","memset(void *, int, size_t) -> void *","void * __s, int __c, size_t __n","void *","void *"
"vp9_loop_filter_frame_init","clamp","/src/libvpx/vp9/common/vp9_loopfilter.c","/src/libvpx/vpx_dsp/vpx_dsp_common.h",252,295,66,66,"vp9_loop_filter_frame_init(VP9Common *, VP9_COMMON *, int) -> void","VP9Common * cm, int default_filt_lvl","void","void","clamp(int, int, int) -> int","int value, int low, int high","int","int"
"vp9_loop_filter_frame_init","update_sharpness","/src/libvpx/vp9/common/vp9_loopfilter.c","/src/libvpx/vp9/common/vp9_loopfilter.c",252,295,212,212,"vp9_loop_filter_frame_init(VP9Common *, VP9_COMMON *, int) -> void","VP9Common * cm, int default_filt_lvl","void","void","update_sharpness(loop_filter_info_n *, int) -> void","loop_filter_info_n * lfi, int sharpness_lvl","void","void"
"vp9_loop_filter_frame_init","segfeature_active","/src/libvpx/vp9/common/vp9_loopfilter.c","/src/libvpx/vp9/common/vp9_seg_common.h",252,295,57,57,"vp9_loop_filter_frame_init(VP9Common *, VP9_COMMON *, int) -> void","VP9Common * cm, int default_filt_lvl","void","void","segfeature_active(const segmentation *, int, SEG_LVL_FEATURES) -> int","const segmentation * seg, int segment_id, SEG_LVL_FEATURES feature_id","int","int"
"vp9_loop_filter_frame_init","get_segdata","/src/libvpx/vp9/common/vp9_loopfilter.c","/src/libvpx/vp9/common/vp9_seg_common.h",252,295,75,75,"vp9_loop_filter_frame_init(VP9Common *, VP9_COMMON *, int) -> void","VP9Common * cm, int default_filt_lvl","void","void","get_segdata(const segmentation *, int, SEG_LVL_FEATURES) -> int","const segmentation * seg, int segment_id, SEG_LVL_FEATURES feature_id","int","int"
