"caller","callee","caller_src","callee_src","start_body_start_line","start_body_end_line","end_body_start_line","end_body_end_line","caller_signature","caller_parameter_string","caller_return_type","caller_return_type_inferred","callee_signature","callee_parameter_string","callee_return_type","callee_return_type_inferred"
"pack_16_2t_pixels","_mm256_loadu_si256","/src/libvpx/vpx_dsp/x86/highbd_convolve_avx2.c","/usr/local/lib/clang/15.0.0/include/avxintrin.h",401,412,3159,3159,"pack_16_2t_pixels(const __m256i *, const __m256i *, __m256i *) -> void","const __m256i * s0, const __m256i * s1, __m256i * sig","void","void","_mm256_loadu_si256(const __m256i_u *) -> __m256i","const __m256i_u * __p","__m256i","__attribute((vector_size(32))) long long"
"pack_16_2t_pixels","_mm256_permutevar8x32_epi32","/src/libvpx/vpx_dsp/x86/highbd_convolve_avx2.c","/usr/local/lib/clang/15.0.0/include/avx2intrin.h",401,412,803,803,"pack_16_2t_pixels(const __m256i *, const __m256i *, __m256i *) -> void","const __m256i * s0, const __m256i * s1, __m256i * sig","void","void","_mm256_permutevar8x32_epi32(__m256i, __m256i) -> __m256i","__m256i __a, __m256i __b","__m256i","__attribute((vector_size(32))) long long"
"pack_16_2t_pixels","_mm256_shuffle_epi8","/src/libvpx/vpx_dsp/x86/highbd_convolve_avx2.c","/usr/local/lib/clang/15.0.0/include/avx2intrin.h",401,412,464,464,"pack_16_2t_pixels(const __m256i *, const __m256i *, __m256i *) -> void","const __m256i * s0, const __m256i * s1, __m256i * sig","void","void","_mm256_shuffle_epi8(__m256i, __m256i) -> __m256i","__m256i __a, __m256i __b","__m256i","__attribute((vector_size(32))) long long"
"pack_16_2t_pixels","__builtin_ia32_permti256","/src/libvpx/vpx_dsp/x86/highbd_convolve_avx2.c","",401,412,0,0,"pack_16_2t_pixels(const __m256i *, const __m256i *, __m256i *) -> void","const __m256i * s0, const __m256i * s1, __m256i * sig","void","void","__builtin_ia32_permti256(__attribute((vector_size(32))) long long, __attribute((vector_size(32))) long long, int) -> __attribute((vector_size(32))) long long","__attribute((vector_size(32))) long long (unnamed parameter 0), __attribute((vector_size(32))) long long (unnamed parameter 1), int (unnamed parameter 2)","__attribute((vector_size(32))) long long","__attribute((vector_size(32))) long long"
