"caller","callee","caller_src","callee_src","start_body_start_line","start_body_end_line","end_body_start_line","end_body_end_line","caller_signature","caller_parameter_string","caller_return_type","caller_return_type_inferred","callee_signature","callee_parameter_string","callee_return_type","callee_return_type_inferred"
"LLVMFuzzerTestOneInput","vpx_codec_destroy","/src/libvpx/examples/vpx_dec_fuzzer.cc","/src/libvpx/vpx/src/vpx_codec.c",84,130,66,66,"LLVMFuzzerTestOneInput(const uint8_t *, size_t) -> int","const uint8_t * data, size_t size","int","int","vpx_codec_destroy(vpx_codec_ctx_t *) -> vpx_codec_err_t","vpx_codec_ctx_t * ctx","vpx_codec_err_t","vpx_codec_err_t"
"LLVMFuzzerTestOneInput","vpx_codec_destroy","/src/libvpx/examples/vpx_dec_fuzzer.cc","/src/libvpx/vpx/src/vpx_codec.c",84,130,66,66,"LLVMFuzzerTestOneInput(const uint8_t *, size_t) -> int","const uint8_t * data, size_t size","int","int","vpx_codec_destroy(vpx_codec_ctx_t *) -> vpx_codec_err_t","vpx_codec_ctx_t * ctx","vpx_codec_err_t","(unnamed enum)"
"LLVMFuzzerTestOneInput","vpx_codec_destroy","/src/libvpx/examples/vpx_dec_fuzzer.cc","/src/libvpx/vpx/src/vpx_codec.c",84,130,66,66,"LLVMFuzzerTestOneInput(const uint8_t *, size_t) -> int","const uint8_t * data, size_t size","int","int","vpx_codec_destroy(vpx_codec_ctx_t *) -> vpx_codec_err_t","vpx_codec_ctx_t * ctx","vpx_codec_err_t","vpx_codec_err_t"
"LLVMFuzzerTestOneInput","vpx_codec_destroy","/src/libvpx/examples/vpx_dec_fuzzer.cc","/src/libvpx/vpx/src/vpx_codec.c",84,130,66,66,"LLVMFuzzerTestOneInput(const uint8_t *, size_t) -> int","const uint8_t * data, size_t size","int","int","vpx_codec_destroy(vpx_codec_ctx_t *) -> vpx_codec_err_t","vpx_codec_ctx_t * ctx","vpx_codec_err_t","(unnamed enum)"
"LLVMFuzzerTestOneInput","vpx_codec_control_VP9D_SET_LOOP_FILTER_OPT","/src/libvpx/examples/vpx_dec_fuzzer.cc","/src/libvpx/vpx/vp8dx.h",84,130,218,218,"LLVMFuzzerTestOneInput(const uint8_t *, size_t) -> int","const uint8_t * data, size_t size","int","int","vpx_codec_control_VP9D_SET_LOOP_FILTER_OPT(vpx_codec_ctx_t *, int, int) -> vpx_codec_err_t","vpx_codec_ctx_t * ctx, int ctrl_id, int data","vpx_codec_err_t","vpx_codec_err_t"
"LLVMFuzzerTestOneInput","vpx_codec_control_VP9D_SET_LOOP_FILTER_OPT","/src/libvpx/examples/vpx_dec_fuzzer.cc","/src/libvpx/vpx/vp8dx.h",84,130,218,218,"LLVMFuzzerTestOneInput(const uint8_t *, size_t) -> int","const uint8_t * data, size_t size","int","int","vpx_codec_control_VP9D_SET_LOOP_FILTER_OPT(vpx_codec_ctx_t *, int, int) -> vpx_codec_err_t","vpx_codec_ctx_t * ctx, int ctrl_id, int data","vpx_codec_err_t","(unnamed enum)"
"LLVMFuzzerTestOneInput","vpx_codec_control_VP9D_SET_LOOP_FILTER_OPT","/src/libvpx/examples/vpx_dec_fuzzer.cc","/src/libvpx/vpx/vp8dx.h",84,130,218,218,"LLVMFuzzerTestOneInput(const uint8_t *, size_t) -> int","const uint8_t * data, size_t size","int","int","vpx_codec_control_VP9D_SET_LOOP_FILTER_OPT(vpx_codec_ctx_t *, int, int) -> vpx_codec_err_t","vpx_codec_ctx_t * ctx, int ctrl_id, int data","vpx_codec_err_t","vpx_codec_err_t"
"LLVMFuzzerTestOneInput","vpx_codec_control_VP9D_SET_LOOP_FILTER_OPT","/src/libvpx/examples/vpx_dec_fuzzer.cc","/src/libvpx/vpx/vp8dx.h",84,130,218,218,"LLVMFuzzerTestOneInput(const uint8_t *, size_t) -> int","const uint8_t * data, size_t size","int","int","vpx_codec_control_VP9D_SET_LOOP_FILTER_OPT(vpx_codec_ctx_t *, int, int) -> vpx_codec_err_t","vpx_codec_ctx_t * ctx, int ctrl_id, int data","vpx_codec_err_t","(unnamed enum)"
"LLVMFuzzerTestOneInput","vpx_codec_vp9_dx","/src/libvpx/examples/vpx_dec_fuzzer.cc","/src/libvpx/vp9/vp9_dx_iface.c",84,130,712,712,"LLVMFuzzerTestOneInput(const uint8_t *, size_t) -> int","const uint8_t * data, size_t size","int","int","vpx_codec_vp9_dx() -> vpx_codec_iface_t *","","vpx_codec_iface_t *","vpx_codec_iface *"
"LLVMFuzzerTestOneInput","vpx_codec_vp9_dx","/src/libvpx/examples/vpx_dec_fuzzer.cc","/src/libvpx/vp9/vp9_dx_iface.c",84,130,712,712,"LLVMFuzzerTestOneInput(const uint8_t *, size_t) -> int","const uint8_t * data, size_t size","int","int","vpx_codec_vp9_dx() -> vpx_codec_iface_t *","","vpx_codec_iface_t *","vpx_codec_iface *"
"LLVMFuzzerTestOneInput","vpx_codec_vp9_dx","/src/libvpx/examples/vpx_dec_fuzzer.cc","/src/libvpx/vp9/vp9_dx_iface.c",84,130,712,712,"LLVMFuzzerTestOneInput(const uint8_t *, size_t) -> int","const uint8_t * data, size_t size","int","int","vpx_codec_vp9_dx() -> vpx_codec_iface_t *","","vpx_codec_iface_t *","vpx_codec_iface *"
"LLVMFuzzerTestOneInput","vpx_codec_vp9_dx","/src/libvpx/examples/vpx_dec_fuzzer.cc","/src/libvpx/vp9/vp9_dx_iface.c",84,130,712,712,"LLVMFuzzerTestOneInput(const uint8_t *, size_t) -> int","const uint8_t * data, size_t size","int","int","vpx_codec_vp9_dx() -> vpx_codec_iface_t *","","vpx_codec_iface_t *","vpx_codec_iface *"
"LLVMFuzzerTestOneInput","vpx_codec_vp8_dx","/src/libvpx/examples/vpx_dec_fuzzer.cc","/src/libvpx/vp8/vp8_dx_iface.c",84,130,726,726,"LLVMFuzzerTestOneInput(const uint8_t *, size_t) -> int","const uint8_t * data, size_t size","int","int","vpx_codec_vp8_dx() -> vpx_codec_iface_t *","","vpx_codec_iface_t *","vpx_codec_iface *"
"LLVMFuzzerTestOneInput","vpx_codec_vp8_dx","/src/libvpx/examples/vpx_dec_fuzzer.cc","/src/libvpx/vp8/vp8_dx_iface.c",84,130,726,726,"LLVMFuzzerTestOneInput(const uint8_t *, size_t) -> int","const uint8_t * data, size_t size","int","int","vpx_codec_vp8_dx() -> vpx_codec_iface_t *","","vpx_codec_iface_t *","vpx_codec_iface *"
"LLVMFuzzerTestOneInput","vpx_codec_vp8_dx","/src/libvpx/examples/vpx_dec_fuzzer.cc","/src/libvpx/vp8/vp8_dx_iface.c",84,130,726,726,"LLVMFuzzerTestOneInput(const uint8_t *, size_t) -> int","const uint8_t * data, size_t size","int","int","vpx_codec_vp8_dx() -> vpx_codec_iface_t *","","vpx_codec_iface_t *","vpx_codec_iface *"
"LLVMFuzzerTestOneInput","vpx_codec_vp8_dx","/src/libvpx/examples/vpx_dec_fuzzer.cc","/src/libvpx/vp8/vp8_dx_iface.c",84,130,726,726,"LLVMFuzzerTestOneInput(const uint8_t *, size_t) -> int","const uint8_t * data, size_t size","int","int","vpx_codec_vp8_dx() -> vpx_codec_iface_t *","","vpx_codec_iface_t *","vpx_codec_iface *"
"LLVMFuzzerTestOneInput","vpx_codec_get_frame","/src/libvpx/examples/vpx_dec_fuzzer.cc","/src/libvpx/vpx/src/vpx_decoder.c",84,130,122,122,"LLVMFuzzerTestOneInput(const uint8_t *, size_t) -> int","const uint8_t * data, size_t size","int","int","vpx_codec_get_frame(vpx_codec_ctx_t *, vpx_codec_iter_t *) -> vpx_image_t *","vpx_codec_ctx_t * ctx, vpx_codec_iter_t * iter","vpx_image_t *","vpx_image *"
"LLVMFuzzerTestOneInput","vpx_codec_decode","/src/libvpx/examples/vpx_dec_fuzzer.cc","/src/libvpx/vpx/src/vpx_decoder.c",84,130,104,104,"LLVMFuzzerTestOneInput(const uint8_t *, size_t) -> int","const uint8_t * data, size_t size","int","int","vpx_codec_decode(vpx_codec_ctx_t *, const uint8_t *, unsigned int, void *, long) -> vpx_codec_err_t","vpx_codec_ctx_t * ctx, const uint8_t * data, unsigned int data_sz, void * user_priv, long deadline","vpx_codec_err_t","vpx_codec_err_t"
"LLVMFuzzerTestOneInput","vpx_codec_decode","/src/libvpx/examples/vpx_dec_fuzzer.cc","/src/libvpx/vpx/src/vpx_decoder.c",84,130,104,104,"LLVMFuzzerTestOneInput(const uint8_t *, size_t) -> int","const uint8_t * data, size_t size","int","int","vpx_codec_decode(vpx_codec_ctx_t *, const uint8_t *, unsigned int, void *, long) -> vpx_codec_err_t","vpx_codec_ctx_t * ctx, const uint8_t * data, unsigned int data_sz, void * user_priv, long deadline","vpx_codec_err_t","(unnamed enum)"
"LLVMFuzzerTestOneInput","vpx_codec_decode","/src/libvpx/examples/vpx_dec_fuzzer.cc","/src/libvpx/vpx/src/vpx_decoder.c",84,130,104,104,"LLVMFuzzerTestOneInput(const uint8_t *, size_t) -> int","const uint8_t * data, size_t size","int","int","vpx_codec_decode(vpx_codec_ctx_t *, const uint8_t *, unsigned int, void *, long) -> vpx_codec_err_t","vpx_codec_ctx_t * ctx, const uint8_t * data, unsigned int data_sz, void * user_priv, long deadline","vpx_codec_err_t","vpx_codec_err_t"
"LLVMFuzzerTestOneInput","vpx_codec_decode","/src/libvpx/examples/vpx_dec_fuzzer.cc","/src/libvpx/vpx/src/vpx_decoder.c",84,130,104,104,"LLVMFuzzerTestOneInput(const uint8_t *, size_t) -> int","const uint8_t * data, size_t size","int","int","vpx_codec_decode(vpx_codec_ctx_t *, const uint8_t *, unsigned int, void *, long) -> vpx_codec_err_t","vpx_codec_ctx_t * ctx, const uint8_t * data, unsigned int data_sz, void * user_priv, long deadline","vpx_codec_err_t","(unnamed enum)"
"LLVMFuzzerTestOneInput","vpx_codec_peek_stream_info","/src/libvpx/examples/vpx_dec_fuzzer.cc","/src/libvpx/vpx/src/vpx_decoder.c",84,130,65,65,"LLVMFuzzerTestOneInput(const uint8_t *, size_t) -> int","const uint8_t * data, size_t size","int","int","vpx_codec_peek_stream_info(vpx_codec_iface_t *, const uint8_t *, unsigned int, vpx_codec_stream_info_t *) -> vpx_codec_err_t","vpx_codec_iface_t * iface, const uint8_t * data, unsigned int data_sz, vpx_codec_stream_info_t * si","vpx_codec_err_t","vpx_codec_err_t"
"LLVMFuzzerTestOneInput","vpx_codec_peek_stream_info","/src/libvpx/examples/vpx_dec_fuzzer.cc","/src/libvpx/vpx/src/vpx_decoder.c",84,130,65,65,"LLVMFuzzerTestOneInput(const uint8_t *, size_t) -> int","const uint8_t * data, size_t size","int","int","vpx_codec_peek_stream_info(vpx_codec_iface_t *, const uint8_t *, unsigned int, vpx_codec_stream_info_t *) -> vpx_codec_err_t","vpx_codec_iface_t * iface, const uint8_t * data, unsigned int data_sz, vpx_codec_stream_info_t * si","vpx_codec_err_t","(unnamed enum)"
"LLVMFuzzerTestOneInput","vpx_codec_peek_stream_info","/src/libvpx/examples/vpx_dec_fuzzer.cc","/src/libvpx/vpx/src/vpx_decoder.c",84,130,65,65,"LLVMFuzzerTestOneInput(const uint8_t *, size_t) -> int","const uint8_t * data, size_t size","int","int","vpx_codec_peek_stream_info(vpx_codec_iface_t *, const uint8_t *, unsigned int, vpx_codec_stream_info_t *) -> vpx_codec_err_t","vpx_codec_iface_t * iface, const uint8_t * data, unsigned int data_sz, vpx_codec_stream_info_t * si","vpx_codec_err_t","vpx_codec_err_t"
"LLVMFuzzerTestOneInput","vpx_codec_peek_stream_info","/src/libvpx/examples/vpx_dec_fuzzer.cc","/src/libvpx/vpx/src/vpx_decoder.c",84,130,65,65,"LLVMFuzzerTestOneInput(const uint8_t *, size_t) -> int","const uint8_t * data, size_t size","int","int","vpx_codec_peek_stream_info(vpx_codec_iface_t *, const uint8_t *, unsigned int, vpx_codec_stream_info_t *) -> vpx_codec_err_t","vpx_codec_iface_t * iface, const uint8_t * data, unsigned int data_sz, vpx_codec_stream_info_t * si","vpx_codec_err_t","(unnamed enum)"
"LLVMFuzzerTestOneInput","vpx_codec_dec_init_ver","/src/libvpx/examples/vpx_dec_fuzzer.cc","/src/libvpx/vpx/src/vpx_decoder.c",84,130,24,24,"LLVMFuzzerTestOneInput(const uint8_t *, size_t) -> int","const uint8_t * data, size_t size","int","int","vpx_codec_dec_init_ver(vpx_codec_ctx_t *, vpx_codec_iface_t *, const vpx_codec_dec_cfg_t *, vpx_codec_flags_t, int) -> vpx_codec_err_t","vpx_codec_ctx_t * ctx, vpx_codec_iface_t * iface, const vpx_codec_dec_cfg_t * cfg, vpx_codec_flags_t flags, int ver","vpx_codec_err_t","vpx_codec_err_t"
"LLVMFuzzerTestOneInput","vpx_codec_dec_init_ver","/src/libvpx/examples/vpx_dec_fuzzer.cc","/src/libvpx/vpx/src/vpx_decoder.c",84,130,24,24,"LLVMFuzzerTestOneInput(const uint8_t *, size_t) -> int","const uint8_t * data, size_t size","int","int","vpx_codec_dec_init_ver(vpx_codec_ctx_t *, vpx_codec_iface_t *, const vpx_codec_dec_cfg_t *, vpx_codec_flags_t, int) -> vpx_codec_err_t","vpx_codec_ctx_t * ctx, vpx_codec_iface_t * iface, const vpx_codec_dec_cfg_t * cfg, vpx_codec_flags_t flags, int ver","vpx_codec_err_t","(unnamed enum)"
"LLVMFuzzerTestOneInput","vpx_codec_dec_init_ver","/src/libvpx/examples/vpx_dec_fuzzer.cc","/src/libvpx/vpx/src/vpx_decoder.c",84,130,24,24,"LLVMFuzzerTestOneInput(const uint8_t *, size_t) -> int","const uint8_t * data, size_t size","int","int","vpx_codec_dec_init_ver(vpx_codec_ctx_t *, vpx_codec_iface_t *, const vpx_codec_dec_cfg_t *, vpx_codec_flags_t, int) -> vpx_codec_err_t","vpx_codec_ctx_t * ctx, vpx_codec_iface_t * iface, const vpx_codec_dec_cfg_t * cfg, vpx_codec_flags_t flags, int ver","vpx_codec_err_t","vpx_codec_err_t"
"LLVMFuzzerTestOneInput","vpx_codec_dec_init_ver","/src/libvpx/examples/vpx_dec_fuzzer.cc","/src/libvpx/vpx/src/vpx_decoder.c",84,130,24,24,"LLVMFuzzerTestOneInput(const uint8_t *, size_t) -> int","const uint8_t * data, size_t size","int","int","vpx_codec_dec_init_ver(vpx_codec_ctx_t *, vpx_codec_iface_t *, const vpx_codec_dec_cfg_t *, vpx_codec_flags_t, int) -> vpx_codec_err_t","vpx_codec_ctx_t * ctx, vpx_codec_iface_t * iface, const vpx_codec_dec_cfg_t * cfg, vpx_codec_flags_t flags, int ver","vpx_codec_err_t","(unnamed enum)"
"LLVMFuzzerTestOneInput","mem_get_le32_as_int","/src/libvpx/examples/vpx_dec_fuzzer.cc","/src/libvpx/vpx_ports/mem_ops.h",84,130,124,124,"LLVMFuzzerTestOneInput(const uint8_t *, size_t) -> int","const uint8_t * data, size_t size","int","int","mem_get_le32_as_int(const void *) -> unsigned int","const void * vmem","unsigned int","unsigned int"
"LLVMFuzzerTestOneInput","min","/src/libvpx/examples/vpx_dec_fuzzer.cc","/usr/local/include/c++/v1/__algorithm/min.h",84,130,40,40,"LLVMFuzzerTestOneInput(const uint8_t *, size_t) -> int","const uint8_t * data, size_t size","int","int","std::__1::min<unsigned long>(const unsigned long &, const unsigned long &) -> const unsigned long &","const unsigned long & __a, const unsigned long & __b","const unsigned long &","unsigned long &"
