"caller","callee","caller_src","callee_src","start_body_start_line","start_body_end_line","end_body_start_line","end_body_end_line","caller_signature","caller_parameter_string","caller_return_type","caller_return_type_inferred","callee_signature","callee_parameter_string","callee_return_type","callee_return_type_inferred"
"setup_decoding_thread_data","memcpy","/src/libvpx/vp8/decoder/threading.c","/usr/include/string.h",44,87,43,43,"setup_decoding_thread_data(VP8D_COMP *, MACROBLOCKD *, MB_ROW_DEC *, int) -> void","VP8D_COMP * pbi, MACROBLOCKD * xd, MB_ROW_DEC * mbrd, int count","void","void","memcpy(void *__restrict__, const void *__restrict__, size_t) -> void *","void *__restrict__ __dest, const void *__restrict__ __src, size_t __n","void *","void *"
"setup_decoding_thread_data","vpx_atomic_store_release","/src/libvpx/vp8/decoder/threading.c","/src/libvpx/vpx_util/vpx_atomics.h",44,87,83,83,"setup_decoding_thread_data(VP8D_COMP *, MACROBLOCKD *, MB_ROW_DEC *, int) -> void","VP8D_COMP * pbi, MACROBLOCKD * xd, MB_ROW_DEC * mbrd, int count","void","void","vpx_atomic_store_release(vpx_atomic_int *, int) -> void","vpx_atomic_int * atomic, int value","void","void"
