"caller","callee","caller_src","callee_src","start_body_start_line","start_body_end_line","end_body_start_line","end_body_end_line","caller_signature","caller_parameter_string","caller_return_type","caller_return_type_inferred","callee_signature","callee_parameter_string","callee_return_type","callee_return_type_inferred"
"parse_block","vpx_internal_error","/src/libvpx/vp9/decoder/vp9_decodeframe.c","/src/libvpx/vpx/src/vpx_codec.c",1065,1121,116,116,"parse_block(TileWorkerData *, VP9Decoder *const, int, int, BLOCK_SIZE, int, int) -> void","TileWorkerData * twd, VP9Decoder *const pbi, int mi_row, int mi_col, BLOCK_SIZE bsize, int bwl, int bhl","void","void","vpx_internal_error(vpx_internal_error_info *, vpx_codec_err_t, const char *) -> void","vpx_internal_error_info * info, vpx_codec_err_t error, const char * fmt","void","void"
"parse_block","is_inter_block","/src/libvpx/vp9/decoder/vp9_decodeframe.c","/src/libvpx/vp9/common/vp9_blockd.h",1065,1121,103,103,"parse_block(TileWorkerData *, VP9Decoder *const, int, int, BLOCK_SIZE, int, int) -> void","TileWorkerData * twd, VP9Decoder *const pbi, int mi_row, int mi_col, BLOCK_SIZE bsize, int bwl, int bhl","void","void","is_inter_block(const MODE_INFO *) -> int","const MODE_INFO * mi","int","int"
"parse_block","vpx_reader_has_error","/src/libvpx/vp9/decoder/vp9_decodeframe.c","/src/libvpx/vpx_dsp/bitreader.h",1065,1121,59,59,"parse_block(TileWorkerData *, VP9Decoder *const, int, int, BLOCK_SIZE, int, int) -> void","TileWorkerData * twd, VP9Decoder *const pbi, int mi_row, int mi_col, BLOCK_SIZE bsize, int bwl, int bhl","void","void","vpx_reader_has_error(vpx_reader *) -> int","vpx_reader * r","int","int"
"parse_block","set_offsets","/src/libvpx/vp9/decoder/vp9_decodeframe.c","/src/libvpx/vp9/decoder/vp9_decodeframe.c",1065,1121,824,824,"parse_block(TileWorkerData *, VP9Decoder *const, int, int, BLOCK_SIZE, int, int) -> void","TileWorkerData * twd, VP9Decoder *const pbi, int mi_row, int mi_col, BLOCK_SIZE bsize, int bwl, int bhl","void","void","set_offsets(VP9_COMMON *const, MACROBLOCKD *const, BLOCK_SIZE, int, int, int, int, int, int, int, int) -> MODE_INFO *","VP9_COMMON *const cm, MACROBLOCKD *const xd, BLOCK_SIZE bsize, int mi_row, int mi_col, int bw, int bh, int x_mis, int y_mis, int bwl, int bhl","MODE_INFO *","MODE_INFO *"
"parse_block","vp9_read_mode_info","/src/libvpx/vp9/decoder/vp9_decodeframe.c","/src/libvpx/vp9/decoder/vp9_decodemv.c",1065,1121,813,813,"parse_block(TileWorkerData *, VP9Decoder *const, int, int, BLOCK_SIZE, int, int) -> void","TileWorkerData * twd, VP9Decoder *const pbi, int mi_row, int mi_col, BLOCK_SIZE bsize, int bwl, int bhl","void","void","vp9_read_mode_info(TileWorkerData *, VP9Decoder *const, int, int, int, int) -> void","TileWorkerData * twd, VP9Decoder *const pbi, int mi_row, int mi_col, int x_mis, int y_mis","void","void"
"parse_block","dec_reset_skip_context","/src/libvpx/vp9/decoder/vp9_decodeframe.c","/src/libvpx/vp9/decoder/vp9_decodeframe.c",1065,1121,785,785,"parse_block(TileWorkerData *, VP9Decoder *const, int, int, BLOCK_SIZE, int, int) -> void","TileWorkerData * twd, VP9Decoder *const pbi, int mi_row, int mi_col, BLOCK_SIZE bsize, int bwl, int bhl","void","void","dec_reset_skip_context(MACROBLOCKD *) -> void","MACROBLOCKD * xd","void","void"
"parse_block","predict_recon_intra","/src/libvpx/vp9/decoder/vp9_decodeframe.c","/src/libvpx/vp9/decoder/vp9_decodeframe.c",1065,1121,884,884,"parse_block(TileWorkerData *, VP9Decoder *const, int, int, BLOCK_SIZE, int, int) -> void","TileWorkerData * twd, VP9Decoder *const pbi, int mi_row, int mi_col, BLOCK_SIZE bsize, int bwl, int bhl","void","void","predict_recon_intra(MACROBLOCKD *, MODE_INFO *, TileWorkerData *, intra_recon_func) -> void","MACROBLOCKD * xd, MODE_INFO * mi, TileWorkerData * twd, intra_recon_func func","void","void"
"parse_block","predict_recon_inter","/src/libvpx/vp9/decoder/vp9_decodeframe.c","/src/libvpx/vp9/decoder/vp9_decodeframe.c",1065,1121,853,853,"parse_block(TileWorkerData *, VP9Decoder *const, int, int, BLOCK_SIZE, int, int) -> void","TileWorkerData * twd, VP9Decoder *const pbi, int mi_row, int mi_col, BLOCK_SIZE bsize, int bwl, int bhl","void","void","predict_recon_inter(MACROBLOCKD *, MODE_INFO *, TileWorkerData *, predict_recon_func) -> int","MACROBLOCKD * xd, MODE_INFO * mi, TileWorkerData * twd, predict_recon_func func","int","int"
