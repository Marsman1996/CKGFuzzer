"caller","callee","caller_src","callee_src","start_body_start_line","start_body_end_line","end_body_start_line","end_body_end_line","caller_signature","caller_parameter_string","caller_return_type","caller_return_type_inferred","callee_signature","callee_parameter_string","callee_return_type","callee_return_type_inferred"
"file_read","ferror","/src/libvpx/y4minput.c","/usr/include/stdio.h",24,54,761,761,"file_read(void *, size_t, FILE *) -> int","void * buf, size_t size, FILE * file","int","int","ferror(FILE *) -> int","FILE * __stream","int","int"
"file_read","feof","/src/libvpx/y4minput.c","/usr/include/stdio.h",24,54,759,759,"file_read(void *, size_t, FILE *) -> int","void * buf, size_t size, FILE * file","int","int","feof(FILE *) -> int","FILE * __stream","int","int"
"file_read","clearerr","/src/libvpx/y4minput.c","/usr/include/stdio.h",24,54,757,757,"file_read(void *, size_t, FILE *) -> int","void * buf, size_t size, FILE * file","int","int","clearerr(FILE *) -> void","FILE * __stream","void","void"
"file_read","fread","/src/libvpx/y4minput.c","/usr/include/stdio.h",24,54,646,646,"file_read(void *, size_t, FILE *) -> int","void * buf, size_t size, FILE * file","int","int","fread(void *__restrict__, size_t, size_t, FILE *__restrict__) -> size_t","void *__restrict__ __ptr, size_t __size, size_t __n, FILE *__restrict__ __stream","size_t","unsigned long"
"file_read","fprintf","/src/libvpx/y4minput.c","/usr/include/stdio.h",24,54,326,326,"file_read(void *, size_t, FILE *) -> int","void * buf, size_t size, FILE * file","int","int","fprintf(FILE *__restrict__, const char *__restrict__) -> int","FILE *__restrict__ __stream, const char *__restrict__ __format","int","int"
"file_read","strerror","/src/libvpx/y4minput.c","/usr/include/string.h",24,54,397,397,"file_read(void *, size_t, FILE *) -> int","void * buf, size_t size, FILE * file","int","int","strerror(int) -> char *","int __errnum","char *","char *"
"file_read","__errno_location","/src/libvpx/y4minput.c","/usr/include/errno.h",24,54,37,37,"file_read(void *, size_t, FILE *) -> int","void * buf, size_t size, FILE * file","int","int","__errno_location() -> int *","","int *","int *"
