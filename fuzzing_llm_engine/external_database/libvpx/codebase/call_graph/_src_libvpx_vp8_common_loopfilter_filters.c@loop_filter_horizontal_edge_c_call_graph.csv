"caller","callee","caller_src","callee_src","start_body_start_line","start_body_end_line","end_body_start_line","end_body_end_line","caller_signature","caller_parameter_string","caller_return_type","caller_return_type_inferred","callee_signature","callee_parameter_string","callee_return_type","callee_return_type_inferred"
"loop_filter_horizontal_edge_c","vp8_filter_mask","/src/libvpx/vp8/common/loopfilter_filters.c","/src/libvpx/vp8/common/loopfilter_filters.c",94,112,24,24,"loop_filter_horizontal_edge_c(unsigned char *, int, const unsigned char *, const unsigned char *, const unsigned char *, int) -> void","unsigned char * s, int p, const unsigned char * blimit, const unsigned char * limit, const unsigned char * thresh, int count","void","void","vp8_filter_mask(uc, uc, uc, uc, uc, uc, uc, uc, uc, uc) -> signed char","uc limit, uc blimit, uc p3, uc p2, uc p1, uc p0, uc q0, uc q1, uc q2, uc q3","signed char","signed char"
"loop_filter_horizontal_edge_c","vp8_hevmask","/src/libvpx/vp8/common/loopfilter_filters.c","/src/libvpx/vp8/common/loopfilter_filters.c",94,112,38,38,"loop_filter_horizontal_edge_c(unsigned char *, int, const unsigned char *, const unsigned char *, const unsigned char *, int) -> void","unsigned char * s, int p, const unsigned char * blimit, const unsigned char * limit, const unsigned char * thresh, int count","void","void","vp8_hevmask(uc, uc, uc, uc, uc) -> signed char","uc thresh, uc p1, uc p0, uc q0, uc q1","signed char","signed char"
"loop_filter_horizontal_edge_c","vp8_filter","/src/libvpx/vp8/common/loopfilter_filters.c","/src/libvpx/vp8/common/loopfilter_filters.c",94,112,45,45,"loop_filter_horizontal_edge_c(unsigned char *, int, const unsigned char *, const unsigned char *, const unsigned char *, int) -> void","unsigned char * s, int p, const unsigned char * blimit, const unsigned char * limit, const unsigned char * thresh, int count","void","void","vp8_filter(signed char, uc, uc *, uc *, uc *, uc *) -> void","signed char mask, uc hev, uc * op1, uc * op0, uc * oq0, uc * oq1","void","void"
