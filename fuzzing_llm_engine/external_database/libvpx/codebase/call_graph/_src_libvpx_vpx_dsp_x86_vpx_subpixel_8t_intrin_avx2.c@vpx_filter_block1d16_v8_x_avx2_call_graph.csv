"caller","callee","caller_src","callee_src","start_body_start_line","start_body_end_line","end_body_start_line","end_body_end_line","caller_signature","caller_parameter_string","caller_return_type","caller_return_type_inferred","callee_signature","callee_parameter_string","callee_return_type","callee_return_type_inferred"
"vpx_filter_block1d16_v8_x_avx2","__assert_fail","/src/libvpx/vpx_dsp/x86/vpx_subpixel_8t_intrin_avx2.c","/usr/include/assert.h",225,324,69,69,"vpx_filter_block1d16_v8_x_avx2(const uint8_t *, ptrdiff_t, uint8_t *, ptrdiff_t, uint32_t, const int16_t *, const int) -> void","const uint8_t * src_ptr, ptrdiff_t src_pitch, uint8_t * output_ptr, ptrdiff_t out_pitch, uint32_t output_height, const int16_t * filter, const int avg","void","void","__assert_fail(const char *, const char *, unsigned int, const char *) -> void","const char * __assertion, const char * __file, unsigned int __line, const char * __function","void","void"
"vpx_filter_block1d16_v8_x_avx2","_mm_loadu_si128","/src/libvpx/vpx_dsp/x86/vpx_subpixel_8t_intrin_avx2.c","/usr/local/lib/clang/15.0.0/include/emmintrin.h",225,324,3552,3552,"vpx_filter_block1d16_v8_x_avx2(const uint8_t *, ptrdiff_t, uint8_t *, ptrdiff_t, uint32_t, const int16_t *, const int) -> void","const uint8_t * src_ptr, ptrdiff_t src_pitch, uint8_t * output_ptr, ptrdiff_t out_pitch, uint32_t output_height, const int16_t * filter, const int avg","void","void","_mm_loadu_si128(const __m128i_u *) -> __m128i","const __m128i_u * __p","__m128i","__attribute((vector_size(16))) long long"
"vpx_filter_block1d16_v8_x_avx2","_mm256_castsi256_si128","/src/libvpx/vpx_dsp/x86/vpx_subpixel_8t_intrin_avx2.c","/usr/local/lib/clang/15.0.0/include/avxintrin.h",225,324,4434,4434,"vpx_filter_block1d16_v8_x_avx2(const uint8_t *, ptrdiff_t, uint8_t *, ptrdiff_t, uint32_t, const int16_t *, const int) -> void","const uint8_t * src_ptr, ptrdiff_t src_pitch, uint8_t * output_ptr, ptrdiff_t out_pitch, uint32_t output_height, const int16_t * filter, const int avg","void","void","_mm256_castsi256_si128(__m256i) -> __m128i","__m256i __a","__m128i","__attribute((vector_size(16))) long long"
"vpx_filter_block1d16_v8_x_avx2","_mm256_castsi128_si256","/src/libvpx/vpx_dsp/x86/vpx_subpixel_8t_intrin_avx2.c","/usr/local/lib/clang/15.0.0/include/avxintrin.h",225,324,4495,4495,"vpx_filter_block1d16_v8_x_avx2(const uint8_t *, ptrdiff_t, uint8_t *, ptrdiff_t, uint32_t, const int16_t *, const int) -> void","const uint8_t * src_ptr, ptrdiff_t src_pitch, uint8_t * output_ptr, ptrdiff_t out_pitch, uint32_t output_height, const int16_t * filter, const int avg","void","void","_mm256_castsi128_si256(__m128i) -> __m256i","__m128i __a","__m256i","__attribute((vector_size(32))) long long"
"vpx_filter_block1d16_v8_x_avx2","_mm256_unpacklo_epi8","/src/libvpx/vpx_dsp/x86/vpx_subpixel_8t_intrin_avx2.c","/usr/local/lib/clang/15.0.0/include/avx2intrin.h",225,324,677,677,"vpx_filter_block1d16_v8_x_avx2(const uint8_t *, ptrdiff_t, uint8_t *, ptrdiff_t, uint32_t, const int16_t *, const int) -> void","const uint8_t * src_ptr, ptrdiff_t src_pitch, uint8_t * output_ptr, ptrdiff_t out_pitch, uint32_t output_height, const int16_t * filter, const int avg","void","void","_mm256_unpacklo_epi8(__m256i, __m256i) -> __m256i","__m256i __a, __m256i __b","__m256i","__attribute((vector_size(32))) long long"
"vpx_filter_block1d16_v8_x_avx2","_mm256_unpackhi_epi8","/src/libvpx/vpx_dsp/x86/vpx_subpixel_8t_intrin_avx2.c","/usr/local/lib/clang/15.0.0/include/avx2intrin.h",225,324,653,653,"vpx_filter_block1d16_v8_x_avx2(const uint8_t *, ptrdiff_t, uint8_t *, ptrdiff_t, uint32_t, const int16_t *, const int) -> void","const uint8_t * src_ptr, ptrdiff_t src_pitch, uint8_t * output_ptr, ptrdiff_t out_pitch, uint32_t output_height, const int16_t * filter, const int avg","void","void","_mm256_unpackhi_epi8(__m256i, __m256i) -> __m256i","__m256i __a, __m256i __b","__m256i","__attribute((vector_size(32))) long long"
"vpx_filter_block1d16_v8_x_avx2","_mm256_avg_epu8","/src/libvpx/vpx_dsp/x86/vpx_subpixel_8t_intrin_avx2.c","/usr/local/lib/clang/15.0.0/include/avx2intrin.h",225,324,133,133,"vpx_filter_block1d16_v8_x_avx2(const uint8_t *, ptrdiff_t, uint8_t *, ptrdiff_t, uint32_t, const int16_t *, const int) -> void","const uint8_t * src_ptr, ptrdiff_t src_pitch, uint8_t * output_ptr, ptrdiff_t out_pitch, uint32_t output_height, const int16_t * filter, const int avg","void","void","_mm256_avg_epu8(__m256i, __m256i) -> __m256i","__m256i __a, __m256i __b","__m256i","__attribute((vector_size(32))) long long"
"vpx_filter_block1d16_v8_x_avx2","_mm256_packus_epi16","/src/libvpx/vpx_dsp/x86/vpx_subpixel_8t_intrin_avx2.c","/usr/local/lib/clang/15.0.0/include/avx2intrin.h",225,324,57,57,"vpx_filter_block1d16_v8_x_avx2(const uint8_t *, ptrdiff_t, uint8_t *, ptrdiff_t, uint32_t, const int16_t *, const int) -> void","const uint8_t * src_ptr, ptrdiff_t src_pitch, uint8_t * output_ptr, ptrdiff_t out_pitch, uint32_t output_height, const int16_t * filter, const int avg","void","void","_mm256_packus_epi16(__m256i, __m256i) -> __m256i","__m256i __a, __m256i __b","__m256i","__attribute((vector_size(32))) long long"
"vpx_filter_block1d16_v8_x_avx2","__builtin_ia32_insert128i256","/src/libvpx/vpx_dsp/x86/vpx_subpixel_8t_intrin_avx2.c","",225,324,0,0,"vpx_filter_block1d16_v8_x_avx2(const uint8_t *, ptrdiff_t, uint8_t *, ptrdiff_t, uint32_t, const int16_t *, const int) -> void","const uint8_t * src_ptr, ptrdiff_t src_pitch, uint8_t * output_ptr, ptrdiff_t out_pitch, uint32_t output_height, const int16_t * filter, const int avg","void","void","__builtin_ia32_insert128i256(__attribute((vector_size(32))) long long, __attribute((vector_size(16))) long long, int) -> __attribute((vector_size(32))) long long","__attribute((vector_size(32))) long long (unnamed parameter 0), __attribute((vector_size(16))) long long (unnamed parameter 1), int (unnamed parameter 2)","__attribute((vector_size(32))) long long","__attribute((vector_size(32))) long long"
"vpx_filter_block1d16_v8_x_avx2","mm256_store2_si128","/src/libvpx/vpx_dsp/x86/vpx_subpixel_8t_intrin_avx2.c","/src/libvpx/vpx_dsp/x86/convolve_avx2.h",225,324,115,115,"vpx_filter_block1d16_v8_x_avx2(const uint8_t *, ptrdiff_t, uint8_t *, ptrdiff_t, uint32_t, const int16_t *, const int) -> void","const uint8_t * src_ptr, ptrdiff_t src_pitch, uint8_t * output_ptr, ptrdiff_t out_pitch, uint32_t output_height, const int16_t * filter, const int avg","void","void","mm256_store2_si128(__m128i *const, __m128i *const, const __m256i *const) -> void","__m128i *const dst_ptr_1, __m128i *const dst_ptr_2, const __m256i *const src","void","void"
"vpx_filter_block1d16_v8_x_avx2","mm256_loadu2_si128","/src/libvpx/vpx_dsp/x86/vpx_subpixel_8t_intrin_avx2.c","/src/libvpx/vpx_dsp/x86/convolve_avx2.h",225,324,103,103,"vpx_filter_block1d16_v8_x_avx2(const uint8_t *, ptrdiff_t, uint8_t *, ptrdiff_t, uint32_t, const int16_t *, const int) -> void","const uint8_t * src_ptr, ptrdiff_t src_pitch, uint8_t * output_ptr, ptrdiff_t out_pitch, uint32_t output_height, const int16_t * filter, const int avg","void","void","mm256_loadu2_si128(const void *, const void *) -> __m256i","const void * lo, const void * hi","__m256i","__attribute((vector_size(32))) long long"
"vpx_filter_block1d16_v8_x_avx2","convolve8_16_avx2","/src/libvpx/vpx_dsp/x86/vpx_subpixel_8t_intrin_avx2.c","/src/libvpx/vpx_dsp/x86/convolve_avx2.h",225,324,53,53,"vpx_filter_block1d16_v8_x_avx2(const uint8_t *, ptrdiff_t, uint8_t *, ptrdiff_t, uint32_t, const int16_t *, const int) -> void","const uint8_t * src_ptr, ptrdiff_t src_pitch, uint8_t * output_ptr, ptrdiff_t out_pitch, uint32_t output_height, const int16_t * filter, const int avg","void","void","convolve8_16_avx2(const __m256i *const, const __m256i *const) -> __m256i","const __m256i *const s, const __m256i *const f","__m256i","__attribute((vector_size(32))) long long"
"vpx_filter_block1d16_v8_x_avx2","shuffle_filter_avx2","/src/libvpx/vpx_dsp/x86/vpx_subpixel_8t_intrin_avx2.c","/src/libvpx/vpx_dsp/x86/convolve_avx2.h",225,324,42,42,"vpx_filter_block1d16_v8_x_avx2(const uint8_t *, ptrdiff_t, uint8_t *, ptrdiff_t, uint32_t, const int16_t *, const int) -> void","const uint8_t * src_ptr, ptrdiff_t src_pitch, uint8_t * output_ptr, ptrdiff_t out_pitch, uint32_t output_height, const int16_t * filter, const int avg","void","void","shuffle_filter_avx2(const int16_t *const, __m256i *const) -> void","const int16_t *const filter, __m256i *const f","void","void"
