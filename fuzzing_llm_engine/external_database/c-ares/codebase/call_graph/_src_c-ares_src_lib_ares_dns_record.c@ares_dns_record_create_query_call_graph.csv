"caller","callee","caller_src","callee_src","start_body_start_line","start_body_end_line","end_body_start_line","end_body_end_line","caller_signature","caller_parameter_string","caller_return_type","caller_return_type_inferred","callee_signature","callee_parameter_string","callee_return_type","callee_return_type_inferred"
"ares_dns_record_create_query","ares__is_onion_domain","/src/c-ares/src/lib/ares_dns_record.c","/src/c-ares/src/lib/ares_getnameinfo.c",1359,1425,427,427,"ares_dns_record_create_query(ares_dns_record_t **, const char *, ares_dns_class_t, ares_dns_rec_type_t, unsigned short, ares_dns_flags_t, size_t) -> ares_status_t","ares_dns_record_t ** dnsrec, const char * name, ares_dns_class_t dnsclass, ares_dns_rec_type_t type, unsigned short id, ares_dns_flags_t flags, size_t max_udp_size","ares_status_t","(unnamed enum)","ares__is_onion_domain(const char *) -> ares_bool_t","const char * name","ares_bool_t","(unnamed enum)"
"ares_dns_record_create_query","ares_dns_rr_set_u16","/src/c-ares/src/lib/ares_dns_record.c","/src/c-ares/src/lib/ares_dns_record.c",1359,1425,1038,1038,"ares_dns_record_create_query(ares_dns_record_t **, const char *, ares_dns_class_t, ares_dns_rec_type_t, unsigned short, ares_dns_flags_t, size_t) -> ares_status_t","ares_dns_record_t ** dnsrec, const char * name, ares_dns_class_t dnsclass, ares_dns_rec_type_t type, unsigned short id, ares_dns_flags_t flags, size_t max_udp_size","ares_status_t","(unnamed enum)","ares_dns_rr_set_u16(ares_dns_rr_t *, ares_dns_rr_key_t, unsigned short) -> ares_status_t","ares_dns_rr_t * dns_rr, ares_dns_rr_key_t key, unsigned short val","ares_status_t","(unnamed enum)"
"ares_dns_record_create_query","ares_dns_rr_set_u8","/src/c-ares/src/lib/ares_dns_record.c","/src/c-ares/src/lib/ares_dns_record.c",1359,1425,1020,1020,"ares_dns_record_create_query(ares_dns_record_t **, const char *, ares_dns_class_t, ares_dns_rec_type_t, unsigned short, ares_dns_flags_t, size_t) -> ares_status_t","ares_dns_record_t ** dnsrec, const char * name, ares_dns_class_t dnsclass, ares_dns_rec_type_t type, unsigned short id, ares_dns_flags_t flags, size_t max_udp_size","ares_status_t","(unnamed enum)","ares_dns_rr_set_u8(ares_dns_rr_t *, ares_dns_rr_key_t, unsigned char) -> ares_status_t","ares_dns_rr_t * dns_rr, ares_dns_rr_key_t key, unsigned char val","ares_status_t","(unnamed enum)"
"ares_dns_record_create_query","ares_dns_record_rr_add","/src/c-ares/src/lib/ares_dns_record.c","/src/c-ares/src/lib/ares_dns_record.c",1359,1425,400,400,"ares_dns_record_create_query(ares_dns_record_t **, const char *, ares_dns_class_t, ares_dns_rec_type_t, unsigned short, ares_dns_flags_t, size_t) -> ares_status_t","ares_dns_record_t ** dnsrec, const char * name, ares_dns_class_t dnsclass, ares_dns_rec_type_t type, unsigned short id, ares_dns_flags_t flags, size_t max_udp_size","ares_status_t","(unnamed enum)","ares_dns_record_rr_add(ares_dns_rr_t **, ares_dns_record_t *, ares_dns_section_t, const char *, ares_dns_rec_type_t, ares_dns_class_t, unsigned int) -> ares_status_t","ares_dns_rr_t ** rr_out, ares_dns_record_t * dnsrec, ares_dns_section_t sect, const char * name, ares_dns_rec_type_t type, ares_dns_class_t rclass, unsigned int ttl","ares_status_t","(unnamed enum)"
"ares_dns_record_create_query","ares_dns_record_query_add","/src/c-ares/src/lib/ares_dns_record.c","/src/c-ares/src/lib/ares_dns_record.c",1359,1425,238,238,"ares_dns_record_create_query(ares_dns_record_t **, const char *, ares_dns_class_t, ares_dns_rec_type_t, unsigned short, ares_dns_flags_t, size_t) -> ares_status_t","ares_dns_record_t ** dnsrec, const char * name, ares_dns_class_t dnsclass, ares_dns_rec_type_t type, unsigned short id, ares_dns_flags_t flags, size_t max_udp_size","ares_status_t","(unnamed enum)","ares_dns_record_query_add(ares_dns_record_t *, const char *, ares_dns_rec_type_t, ares_dns_class_t) -> ares_status_t","ares_dns_record_t * dnsrec, const char * name, ares_dns_rec_type_t qtype, ares_dns_class_t qclass","ares_status_t","(unnamed enum)"
"ares_dns_record_create_query","ares_dns_record_destroy","/src/c-ares/src/lib/ares_dns_record.c","/src/c-ares/src/lib/ares_dns_record.c",1359,1425,195,195,"ares_dns_record_create_query(ares_dns_record_t **, const char *, ares_dns_class_t, ares_dns_rec_type_t, unsigned short, ares_dns_flags_t, size_t) -> ares_status_t","ares_dns_record_t ** dnsrec, const char * name, ares_dns_class_t dnsclass, ares_dns_rec_type_t type, unsigned short id, ares_dns_flags_t flags, size_t max_udp_size","ares_status_t","(unnamed enum)","ares_dns_record_destroy(ares_dns_record_t *) -> void","ares_dns_record_t * dnsrec","void","void"
"ares_dns_record_create_query","ares_dns_record_create","/src/c-ares/src/lib/ares_dns_record.c","/src/c-ares/src/lib/ares_dns_record.c",1359,1425,35,35,"ares_dns_record_create_query(ares_dns_record_t **, const char *, ares_dns_class_t, ares_dns_rec_type_t, unsigned short, ares_dns_flags_t, size_t) -> ares_status_t","ares_dns_record_t ** dnsrec, const char * name, ares_dns_class_t dnsclass, ares_dns_rec_type_t type, unsigned short id, ares_dns_flags_t flags, size_t max_udp_size","ares_status_t","(unnamed enum)","ares_dns_record_create(ares_dns_record_t **, unsigned short, unsigned short, ares_dns_opcode_t, ares_dns_rcode_t) -> ares_status_t","ares_dns_record_t ** dnsrec, unsigned short id, unsigned short flags, ares_dns_opcode_t opcode, ares_dns_rcode_t rcode","ares_status_t","(unnamed enum)"
