"caller","callee","caller_src","callee_src","start_body_start_line","start_body_end_line","end_body_start_line","end_body_end_line","caller_signature","caller_parameter_string","caller_return_type","caller_return_type_inferred","callee_signature","callee_parameter_string","callee_return_type","callee_return_type_inferred"
"read_cmdline","snprintf","/src/c-ares/src/tools/adig.c","/usr/include/stdio.h",151,252,354,354,"read_cmdline(int, const char **, adig_config_t *) -> ares_bool_t","int argc, const char ** argv, adig_config_t * config","ares_bool_t","(unnamed enum)","snprintf(char *__restrict__, size_t, const char *__restrict__) -> int","char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format","int","int"
"read_cmdline","free","/src/c-ares/src/tools/adig.c","/usr/include/stdlib.h",151,252,565,565,"read_cmdline(int, const char **, adig_config_t *) -> ares_bool_t","int argc, const char ** argv, adig_config_t * config","ares_bool_t","(unnamed enum)","free(void *) -> void","void * __ptr","void","void"
"read_cmdline","strtol","/src/c-ares/src/tools/adig.c","/usr/include/stdlib.h",151,252,176,176,"read_cmdline(int, const char **, adig_config_t *) -> ares_bool_t","int argc, const char ** argv, adig_config_t * config","ares_bool_t","(unnamed enum)","strtol(const char *__restrict__, char **__restrict__, int) -> long","const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base","long","long"
"read_cmdline","strdup","/src/c-ares/src/tools/adig.c","/usr/include/string.h",151,252,167,167,"read_cmdline(int, const char **, adig_config_t *) -> ares_bool_t","int argc, const char ** argv, adig_config_t * config","ares_bool_t","(unnamed enum)","strdup(const char *) -> char *","const char * __s","char *","char *"
"read_cmdline","__ctype_b_loc","/src/c-ares/src/tools/adig.c","/usr/include/ctype.h",151,252,79,79,"read_cmdline(int, const char **, adig_config_t *) -> ares_bool_t","int argc, const char ** argv, adig_config_t * config","ares_bool_t","(unnamed enum)","__ctype_b_loc() -> const unsigned short **","","const unsigned short **","unsigned short **"
"read_cmdline","ares_dns_rec_type_fromstr","/src/c-ares/src/tools/adig.c","/src/c-ares/src/lib/ares_dns_mapping.c",151,252,630,630,"read_cmdline(int, const char **, adig_config_t *) -> ares_bool_t","int argc, const char ** argv, adig_config_t * config","ares_bool_t","(unnamed enum)","ares_dns_rec_type_fromstr(ares_dns_rec_type_t *, const char *) -> ares_bool_t","ares_dns_rec_type_t * qtype, const char * str","ares_bool_t","(unnamed enum)"
"read_cmdline","ares_dns_class_fromstr","/src/c-ares/src/tools/adig.c","/src/c-ares/src/lib/ares_dns_mapping.c",151,252,601,601,"read_cmdline(int, const char **, adig_config_t *) -> ares_bool_t","int argc, const char ** argv, adig_config_t * config","ares_bool_t","(unnamed enum)","ares_dns_class_fromstr(ares_dns_class_t *, const char *) -> ares_bool_t","ares_dns_class_t * qclass, const char * str","ares_bool_t","(unnamed enum)"
"read_cmdline","ares_getopt_init","/src/c-ares/src/tools/adig.c","/src/c-ares/src/tools/ares_getopt.c",151,252,52,52,"read_cmdline(int, const char **, adig_config_t *) -> ares_bool_t","int argc, const char ** argv, adig_config_t * config","ares_bool_t","(unnamed enum)","ares_getopt_init(ares_getopt_state_t *, int, const char **) -> void","ares_getopt_state_t * state, int nargc, const char ** nargv","void","void"
"read_cmdline","ares_getopt","/src/c-ares/src/tools/adig.c","/src/c-ares/src/tools/ares_getopt.c",151,252,66,66,"read_cmdline(int, const char **, adig_config_t *) -> ares_bool_t","int argc, const char ** argv, adig_config_t * config","ares_bool_t","(unnamed enum)","ares_getopt(ares_getopt_state_t *, const char *) -> int","ares_getopt_state_t * state, const char * ostr","int","int"
"read_cmdline","lookup_flag","/src/c-ares/src/tools/adig.c","/src/c-ares/src/tools/adig.c",151,252,96,96,"read_cmdline(int, const char **, adig_config_t *) -> ares_bool_t","int argc, const char ** argv, adig_config_t * config","ares_bool_t","(unnamed enum)","lookup_flag(const nv_t *, size_t, const char *) -> int","const nv_t * nv, size_t num_nv, const char * name","int","int"
