"caller","callee","caller_src","callee_src","start_body_start_line","start_body_end_line","end_body_start_line","end_body_end_line","caller_signature","caller_parameter_string","caller_return_type","caller_return_type_inferred","callee_signature","callee_parameter_string","callee_return_type","callee_return_type_inferred"
"cmsAdaptToIlluminant","_cmsMAT3eval","/src/lcms/src/cmswtpnt.c","/src/lcms/src/cmsmtrx.c",329,348,169,169,"cmsAdaptToIlluminant(cmsCIEXYZ *, const cmsCIEXYZ *, const cmsCIEXYZ *, const cmsCIEXYZ *) -> cmsBool","cmsCIEXYZ * Result, const cmsCIEXYZ * SourceWhitePt, const cmsCIEXYZ * Illuminant, const cmsCIEXYZ * Value","cmsBool","int","_cmsMAT3eval(cmsVEC3 *, const cmsMAT3 *, const cmsVEC3 *) -> void","cmsVEC3 * r, const cmsMAT3 * a, const cmsVEC3 * v","void","void"
"cmsAdaptToIlluminant","_cmsVEC3init","/src/lcms/src/cmswtpnt.c","/src/lcms/src/cmsmtrx.c",329,348,34,34,"cmsAdaptToIlluminant(cmsCIEXYZ *, const cmsCIEXYZ *, const cmsCIEXYZ *, const cmsCIEXYZ *) -> cmsBool","cmsCIEXYZ * Result, const cmsCIEXYZ * SourceWhitePt, const cmsCIEXYZ * Illuminant, const cmsCIEXYZ * Value","cmsBool","int","_cmsVEC3init(cmsVEC3 *, cmsFloat64Number, cmsFloat64Number, cmsFloat64Number) -> void","cmsVEC3 * r, cmsFloat64Number x, cmsFloat64Number y, cmsFloat64Number z","void","void"
"cmsAdaptToIlluminant","_cmsAdaptationMatrix","/src/lcms/src/cmswtpnt.c","/src/lcms/src/cmswtpnt.c",329,348,233,233,"cmsAdaptToIlluminant(cmsCIEXYZ *, const cmsCIEXYZ *, const cmsCIEXYZ *, const cmsCIEXYZ *) -> cmsBool","cmsCIEXYZ * Result, const cmsCIEXYZ * SourceWhitePt, const cmsCIEXYZ * Illuminant, const cmsCIEXYZ * Value","cmsBool","int","_cmsAdaptationMatrix(cmsMAT3 *, const cmsMAT3 *, const cmsCIEXYZ *, const cmsCIEXYZ *) -> cmsBool","cmsMAT3 * r, const cmsMAT3 * ConeMatrix, const cmsCIEXYZ * FromIll, const cmsCIEXYZ * ToIll","cmsBool","int"
"cmsAdaptToIlluminant","__assert_fail","/src/lcms/src/cmswtpnt.c","/usr/include/assert.h",329,348,69,69,"cmsAdaptToIlluminant(cmsCIEXYZ *, const cmsCIEXYZ *, const cmsCIEXYZ *, const cmsCIEXYZ *) -> cmsBool","cmsCIEXYZ * Result, const cmsCIEXYZ * SourceWhitePt, const cmsCIEXYZ * Illuminant, const cmsCIEXYZ * Value","cmsBool","int","__assert_fail(const char *, const char *, unsigned int, const char *) -> void","const char * __assertion, const char * __file, unsigned int __line, const char * __function","void","void"
