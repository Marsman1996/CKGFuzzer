"caller","callee","caller_src","callee_src","start_body_start_line","start_body_end_line","end_body_start_line","end_body_end_line","caller_signature","caller_parameter_string","caller_return_type","caller_return_type_inferred","callee_signature","callee_parameter_string","callee_return_type","callee_return_type_inferred"
"PackHalfFromFloat","memmove","/src/lcms/src/cmspack.c","/usr/include/string.h",2939,2983,46,46,"PackHalfFromFloat(_cmsTRANSFORM *, cmsFloat32Number[], cmsUInt8Number *, cmsUInt32Number) -> cmsUInt8Number *","_cmsTRANSFORM * info, cmsFloat32Number[] wOut, cmsUInt8Number * output, cmsUInt32Number Stride","cmsUInt8Number *","unsigned char *","memmove(void *, const void *, size_t) -> void *","void * __dest, const void * __src, size_t __n","void *","void *"
"PackHalfFromFloat","_cmsFloat2Half","/src/lcms/src/cmspack.c","/src/lcms/src/cmshalf.c",2939,2983,519,519,"PackHalfFromFloat(_cmsTRANSFORM *, cmsFloat32Number[], cmsUInt8Number *, cmsUInt32Number) -> cmsUInt8Number *","_cmsTRANSFORM * info, cmsFloat32Number[] wOut, cmsUInt8Number * output, cmsUInt32Number Stride","cmsUInt8Number *","unsigned char *","_cmsFloat2Half(cmsFloat32Number) -> cmsUInt16Number","cmsFloat32Number flt","cmsUInt16Number","unsigned short"
"PackHalfFromFloat","IsInkSpace","/src/lcms/src/cmspack.c","/src/lcms/src/cmspack.c",2939,2983,918,918,"PackHalfFromFloat(_cmsTRANSFORM *, cmsFloat32Number[], cmsUInt8Number *, cmsUInt32Number) -> cmsUInt8Number *","_cmsTRANSFORM * info, cmsFloat32Number[] wOut, cmsUInt8Number * output, cmsUInt32Number Stride","cmsUInt8Number *","unsigned char *","IsInkSpace(cmsUInt32Number) -> cmsBool","cmsUInt32Number Type","cmsBool","int"
"PackHalfFromFloat","PixelSize","/src/lcms/src/cmspack.c","/src/lcms/src/cmspack.c",2939,2983,942,942,"PackHalfFromFloat(_cmsTRANSFORM *, cmsFloat32Number[], cmsUInt8Number *, cmsUInt32Number) -> cmsUInt8Number *","_cmsTRANSFORM * info, cmsFloat32Number[] wOut, cmsUInt8Number * output, cmsUInt32Number Stride","cmsUInt8Number *","unsigned char *","PixelSize(cmsUInt32Number) -> cmsUInt32Number","cmsUInt32Number Format","cmsUInt32Number","unsigned int"
