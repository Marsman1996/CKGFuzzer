"caller","callee","caller_src","callee_src","start_body_start_line","start_body_end_line","end_body_start_line","end_body_end_line","caller_signature","caller_parameter_string","caller_return_type","caller_return_type_inferred","callee_signature","callee_parameter_string","callee_return_type","callee_return_type_inferred"
"EvaluateCLUTfloat","LinLerp1Dfloat","/src/lcms/src/cmslut.c","/src/lcms/src/cmsintrp.c",442,446,231,231,"EvaluateCLUTfloat(const cmsFloat32Number[], cmsFloat32Number[], const cmsStage *) -> void","const cmsFloat32Number[] In, cmsFloat32Number[] Out, const cmsStage * mpe","void","void","LinLerp1Dfloat(const cmsFloat32Number[], cmsFloat32Number[], const cmsInterpParams *) -> void","const cmsFloat32Number[] Value, cmsFloat32Number[] Output, const cmsInterpParams * p","void","void"
"EvaluateCLUTfloat","Eval1InputFloat","/src/lcms/src/cmslut.c","/src/lcms/src/cmsintrp.c",442,446,298,298,"EvaluateCLUTfloat(const cmsFloat32Number[], cmsFloat32Number[], const cmsStage *) -> void","const cmsFloat32Number[] In, cmsFloat32Number[] Out, const cmsStage * mpe","void","void","Eval1InputFloat(const cmsFloat32Number[], cmsFloat32Number[], const cmsInterpParams *) -> void","const cmsFloat32Number[] Value, cmsFloat32Number[] Output, const cmsInterpParams * p","void","void"
"EvaluateCLUTfloat","BilinearInterpFloat","/src/lcms/src/cmslut.c","/src/lcms/src/cmsintrp.c",442,446,344,344,"EvaluateCLUTfloat(const cmsFloat32Number[], cmsFloat32Number[], const cmsStage *) -> void","const cmsFloat32Number[] In, cmsFloat32Number[] Out, const cmsStage * mpe","void","void","BilinearInterpFloat(const cmsFloat32Number[], cmsFloat32Number[], const cmsInterpParams *) -> void","const cmsFloat32Number[] Input, cmsFloat32Number[] Output, const cmsInterpParams * p","void","void"
"EvaluateCLUTfloat","TrilinearInterpFloat","/src/lcms/src/cmslut.c","/src/lcms/src/cmsintrp.c",442,446,456,456,"EvaluateCLUTfloat(const cmsFloat32Number[], cmsFloat32Number[], const cmsStage *) -> void","const cmsFloat32Number[] In, cmsFloat32Number[] Out, const cmsStage * mpe","void","void","TrilinearInterpFloat(const cmsFloat32Number[], cmsFloat32Number[], const cmsInterpParams *) -> void","const cmsFloat32Number[] Input, cmsFloat32Number[] Output, const cmsInterpParams * p","void","void"
"EvaluateCLUTfloat","TetrahedralInterpFloat","/src/lcms/src/cmslut.c","/src/lcms/src/cmsintrp.c",442,446,607,607,"EvaluateCLUTfloat(const cmsFloat32Number[], cmsFloat32Number[], const cmsStage *) -> void","const cmsFloat32Number[] In, cmsFloat32Number[] Out, const cmsStage * mpe","void","void","TetrahedralInterpFloat(const cmsFloat32Number[], cmsFloat32Number[], const cmsInterpParams *) -> void","const cmsFloat32Number[] Input, cmsFloat32Number[] Output, const cmsInterpParams * p","void","void"
"EvaluateCLUTfloat","Eval4InputsFloat","/src/lcms/src/cmslut.c","/src/lcms/src/cmsintrp.c",442,446,1028,1028,"EvaluateCLUTfloat(const cmsFloat32Number[], cmsFloat32Number[], const cmsStage *) -> void","const cmsFloat32Number[] In, cmsFloat32Number[] Out, const cmsStage * mpe","void","void","Eval4InputsFloat(const cmsFloat32Number[], cmsFloat32Number[], const cmsInterpParams *) -> void","const cmsFloat32Number[] Input, cmsFloat32Number[] Output, const cmsInterpParams * p","void","void"
"EvaluateCLUTfloat","Eval5InputsFloat","/src/lcms/src/cmslut.c","/src/lcms/src/cmsintrp.c",442,446,1115,1115,"EvaluateCLUTfloat(const cmsFloat32Number[], cmsFloat32Number[], const cmsStage *) -> void","const cmsFloat32Number[] In, cmsFloat32Number[] Out, const cmsStage * mpe","void","void","Eval5InputsFloat(const cmsFloat32Number[], cmsFloat32Number[], const cmsInterpParams *) -> void","const cmsFloat32Number[] Input, cmsFloat32Number[] Output, const cmsInterpParams * p","void","void"
"EvaluateCLUTfloat","Eval6InputsFloat","/src/lcms/src/cmslut.c","/src/lcms/src/cmsintrp.c",442,446,1202,1202,"EvaluateCLUTfloat(const cmsFloat32Number[], cmsFloat32Number[], const cmsStage *) -> void","const cmsFloat32Number[] In, cmsFloat32Number[] Out, const cmsStage * mpe","void","void","Eval6InputsFloat(const cmsFloat32Number[], cmsFloat32Number[], const cmsInterpParams *) -> void","const cmsFloat32Number[] Input, cmsFloat32Number[] Output, const cmsInterpParams * p","void","void"
"EvaluateCLUTfloat","Eval7InputsFloat","/src/lcms/src/cmslut.c","/src/lcms/src/cmsintrp.c",442,446,1287,1287,"EvaluateCLUTfloat(const cmsFloat32Number[], cmsFloat32Number[], const cmsStage *) -> void","const cmsFloat32Number[] In, cmsFloat32Number[] Out, const cmsStage * mpe","void","void","Eval7InputsFloat(const cmsFloat32Number[], cmsFloat32Number[], const cmsInterpParams *) -> void","const cmsFloat32Number[] Input, cmsFloat32Number[] Output, const cmsInterpParams * p","void","void"
"EvaluateCLUTfloat","Eval8InputsFloat","/src/lcms/src/cmslut.c","/src/lcms/src/cmsintrp.c",442,446,1372,1372,"EvaluateCLUTfloat(const cmsFloat32Number[], cmsFloat32Number[], const cmsStage *) -> void","const cmsFloat32Number[] In, cmsFloat32Number[] Out, const cmsStage * mpe","void","void","Eval8InputsFloat(const cmsFloat32Number[], cmsFloat32Number[], const cmsInterpParams *) -> void","const cmsFloat32Number[] Input, cmsFloat32Number[] Output, const cmsInterpParams * p","void","void"
