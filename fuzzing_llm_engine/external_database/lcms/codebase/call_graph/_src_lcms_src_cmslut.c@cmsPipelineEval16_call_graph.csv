"caller","callee","caller_src","callee_src","start_body_start_line","start_body_end_line","end_body_start_line","end_body_end_line","caller_signature","caller_parameter_string","caller_return_type","caller_return_type_inferred","callee_signature","callee_parameter_string","callee_return_type","callee_return_type_inferred"
"cmsPipelineEval16","__assert_fail","/src/lcms/src/cmslut.c","/usr/include/assert.h",1440,1443,69,69,"cmsPipelineEval16(const cmsUInt16Number[], cmsUInt16Number[], const cmsPipeline *) -> void","const cmsUInt16Number[] In, cmsUInt16Number[] Out, const cmsPipeline * lut","void","void","__assert_fail(const char *, const char *, unsigned int, const char *) -> void","const char * __assertion, const char * __file, unsigned int __line, const char * __function","void","void"
"cmsPipelineEval16","DefaultEvalParametricFn","/src/lcms/src/cmslut.c","/src/lcms/src/cmsgamma.c",1440,1443,313,313,"cmsPipelineEval16(const cmsUInt16Number[], cmsUInt16Number[], const cmsPipeline *) -> void","const cmsUInt16Number[] In, cmsUInt16Number[] Out, const cmsPipeline * lut","void","void","DefaultEvalParametricFn(cmsInt32Number, const cmsFloat64Number[], cmsFloat64Number) -> cmsFloat64Number","cmsInt32Number Type, const cmsFloat64Number[] Params, cmsFloat64Number R","cmsFloat64Number","double"
"cmsPipelineEval16","LinLerp1D","/src/lcms/src/cmslut.c","/src/lcms/src/cmsintrp.c",1440,1443,194,194,"cmsPipelineEval16(const cmsUInt16Number[], cmsUInt16Number[], const cmsPipeline *) -> void","const cmsUInt16Number[] In, cmsUInt16Number[] Out, const cmsPipeline * lut","void","void","LinLerp1D(const cmsUInt16Number[], cmsUInt16Number[], const cmsInterpParams *) -> void","const cmsUInt16Number[] Value, cmsUInt16Number[] Output, const cmsInterpParams * p","void","void"
"cmsPipelineEval16","Eval1Input","/src/lcms/src/cmslut.c","/src/lcms/src/cmsintrp.c",1440,1443,267,267,"cmsPipelineEval16(const cmsUInt16Number[], cmsUInt16Number[], const cmsPipeline *) -> void","const cmsUInt16Number[] In, cmsUInt16Number[] Out, const cmsPipeline * lut","void","void","Eval1Input(const cmsUInt16Number[], cmsUInt16Number[], const cmsInterpParams *) -> void","const cmsUInt16Number[] Input, cmsUInt16Number[] Output, const cmsInterpParams * p16","void","void"
"cmsPipelineEval16","BilinearInterp16","/src/lcms/src/cmslut.c","/src/lcms/src/cmsintrp.c",1440,1443,397,397,"cmsPipelineEval16(const cmsUInt16Number[], cmsUInt16Number[], const cmsPipeline *) -> void","const cmsUInt16Number[] In, cmsUInt16Number[] Out, const cmsPipeline * lut","void","void","BilinearInterp16(const cmsUInt16Number[], cmsUInt16Number[], const cmsInterpParams *) -> void","const cmsUInt16Number[] Input, cmsUInt16Number[] Output, const cmsInterpParams * p","void","void"
"cmsPipelineEval16","TrilinearInterp16","/src/lcms/src/cmslut.c","/src/lcms/src/cmsintrp.c",1440,1443,528,528,"cmsPipelineEval16(const cmsUInt16Number[], cmsUInt16Number[], const cmsPipeline *) -> void","const cmsUInt16Number[] In, cmsUInt16Number[] Out, const cmsPipeline * lut","void","void","TrilinearInterp16(const cmsUInt16Number[], cmsUInt16Number[], const cmsInterpParams *) -> void","const cmsUInt16Number[] Input, cmsUInt16Number[] Output, const cmsInterpParams * p","void","void"
"cmsPipelineEval16","TetrahedralInterp16","/src/lcms/src/cmslut.c","/src/lcms/src/cmsintrp.c",1440,1443,708,708,"cmsPipelineEval16(const cmsUInt16Number[], cmsUInt16Number[], const cmsPipeline *) -> void","const cmsUInt16Number[] In, cmsUInt16Number[] Out, const cmsPipeline * lut","void","void","TetrahedralInterp16(const cmsUInt16Number[], cmsUInt16Number[], const cmsInterpParams *) -> void","const cmsUInt16Number[] Input, cmsUInt16Number[] Output, const cmsInterpParams * p","void","void"
"cmsPipelineEval16","Eval4Inputs","/src/lcms/src/cmslut.c","/src/lcms/src/cmsintrp.c",1440,1443,842,842,"cmsPipelineEval16(const cmsUInt16Number[], cmsUInt16Number[], const cmsPipeline *) -> void","const cmsUInt16Number[] In, cmsUInt16Number[] Out, const cmsPipeline * lut","void","void","Eval4Inputs(const cmsUInt16Number[], cmsUInt16Number[], const cmsInterpParams *) -> void","const cmsUInt16Number[] Input, cmsUInt16Number[] Output, const cmsInterpParams * p16","void","void"
"cmsPipelineEval16","Eval5Inputs","/src/lcms/src/cmslut.c","/src/lcms/src/cmsintrp.c",1440,1443,1071,1071,"cmsPipelineEval16(const cmsUInt16Number[], cmsUInt16Number[], const cmsPipeline *) -> void","const cmsUInt16Number[] In, cmsUInt16Number[] Out, const cmsPipeline * lut","void","void","Eval5Inputs(const cmsUInt16Number[], cmsUInt16Number[], const cmsInterpParams *) -> void","const cmsUInt16Number[] Input, cmsUInt16Number[] Output, const cmsInterpParams * p16","void","void"
"cmsPipelineEval16","Eval6Inputs","/src/lcms/src/cmslut.c","/src/lcms/src/cmsintrp.c",1440,1443,1160,1160,"cmsPipelineEval16(const cmsUInt16Number[], cmsUInt16Number[], const cmsPipeline *) -> void","const cmsUInt16Number[] In, cmsUInt16Number[] Out, const cmsPipeline * lut","void","void","Eval6Inputs(const cmsUInt16Number[], cmsUInt16Number[], const cmsInterpParams *) -> void","const cmsUInt16Number[] Input, cmsUInt16Number[] Output, const cmsInterpParams * p16","void","void"
"cmsPipelineEval16","Eval7Inputs","/src/lcms/src/cmslut.c","/src/lcms/src/cmsintrp.c",1440,1443,1246,1246,"cmsPipelineEval16(const cmsUInt16Number[], cmsUInt16Number[], const cmsPipeline *) -> void","const cmsUInt16Number[] In, cmsUInt16Number[] Out, const cmsPipeline * lut","void","void","Eval7Inputs(const cmsUInt16Number[], cmsUInt16Number[], const cmsInterpParams *) -> void","const cmsUInt16Number[] Input, cmsUInt16Number[] Output, const cmsInterpParams * p16","void","void"
"cmsPipelineEval16","Eval8Inputs","/src/lcms/src/cmslut.c","/src/lcms/src/cmsintrp.c",1440,1443,1332,1332,"cmsPipelineEval16(const cmsUInt16Number[], cmsUInt16Number[], const cmsPipeline *) -> void","const cmsUInt16Number[] In, cmsUInt16Number[] Out, const cmsPipeline * lut","void","void","Eval8Inputs(const cmsUInt16Number[], cmsUInt16Number[], const cmsInterpParams *) -> void","const cmsUInt16Number[] Input, cmsUInt16Number[] Output, const cmsInterpParams * p16","void","void"
"cmsPipelineEval16","_LUTeval16","/src/lcms/src/cmslut.c","/src/lcms/src/cmslut.c",1440,1443,1320,1320,"cmsPipelineEval16(const cmsUInt16Number[], cmsUInt16Number[], const cmsPipeline *) -> void","const cmsUInt16Number[] In, cmsUInt16Number[] Out, const cmsPipeline * lut","void","void","_LUTeval16(const cmsUInt16Number[], cmsUInt16Number[], const void *) -> void","const cmsUInt16Number[] In, cmsUInt16Number[] Out, const void * D","void","void"
"cmsPipelineEval16","FastIdentity16","/src/lcms/src/cmslut.c","/src/lcms/src/cmsopt.c",1440,1443,1364,1364,"cmsPipelineEval16(const cmsUInt16Number[], cmsUInt16Number[], const cmsPipeline *) -> void","const cmsUInt16Number[] In, cmsUInt16Number[] Out, const cmsPipeline * lut","void","void","FastIdentity16(const cmsUInt16Number[], cmsUInt16Number[], const void *) -> void","const cmsUInt16Number[] In, cmsUInt16Number[] Out, const void * D","void","void"
"cmsPipelineEval16","MatShaperEval16","/src/lcms/src/cmslut.c","/src/lcms/src/cmsopt.c",1440,1443,1524,1524,"cmsPipelineEval16(const cmsUInt16Number[], cmsUInt16Number[], const cmsPipeline *) -> void","const cmsUInt16Number[] In, cmsUInt16Number[] Out, const cmsPipeline * lut","void","void","MatShaperEval16(const cmsUInt16Number[], cmsUInt16Number[], const void *) -> void","const cmsUInt16Number[] In, cmsUInt16Number[] Out, const void * D","void","void"
"cmsPipelineEval16","FastEvaluateCurves8","/src/lcms/src/cmslut.c","/src/lcms/src/cmsopt.c",1440,1443,1333,1333,"cmsPipelineEval16(const cmsUInt16Number[], cmsUInt16Number[], const cmsPipeline *) -> void","const cmsUInt16Number[] In, cmsUInt16Number[] Out, const cmsPipeline * lut","void","void","FastEvaluateCurves8(const cmsUInt16Number[], cmsUInt16Number[], const void *) -> void","const cmsUInt16Number[] In, cmsUInt16Number[] Out, const void * D","void","void"
"cmsPipelineEval16","FastEvaluateCurves16","/src/lcms/src/cmslut.c","/src/lcms/src/cmsopt.c",1440,1443,1350,1350,"cmsPipelineEval16(const cmsUInt16Number[], cmsUInt16Number[], const cmsPipeline *) -> void","const cmsUInt16Number[] In, cmsUInt16Number[] Out, const cmsPipeline * lut","void","void","FastEvaluateCurves16(const cmsUInt16Number[], cmsUInt16Number[], const void *) -> void","const cmsUInt16Number[] In, cmsUInt16Number[] Out, const void * D","void","void"
"cmsPipelineEval16","PrelinEval8","/src/lcms/src/cmslut.c","/src/lcms/src/cmsopt.c",1440,1443,912,912,"cmsPipelineEval16(const cmsUInt16Number[], cmsUInt16Number[], const cmsPipeline *) -> void","const cmsUInt16Number[] In, cmsUInt16Number[] Out, const cmsPipeline * lut","void","void","PrelinEval8(const cmsUInt16Number[], cmsUInt16Number[], const void *) -> void","const cmsUInt16Number[] Input, cmsUInt16Number[] Output, const void * D","void","void"
"cmsPipelineEval16","PrelinEval16","/src/lcms/src/cmslut.c","/src/lcms/src/cmsopt.c",1440,1443,301,301,"cmsPipelineEval16(const cmsUInt16Number[], cmsUInt16Number[], const cmsPipeline *) -> void","const cmsUInt16Number[] In, cmsUInt16Number[] Out, const cmsPipeline * lut","void","void","PrelinEval16(const cmsUInt16Number[], cmsUInt16Number[], const void *) -> void","const cmsUInt16Number[] Input, cmsUInt16Number[] Output, const void * D","void","void"
"cmsPipelineEval16","Eval16nop1D","/src/lcms/src/cmslut.c","/src/lcms/src/cmsopt.c",1440,1443,291,291,"cmsPipelineEval16(const cmsUInt16Number[], cmsUInt16Number[], const cmsPipeline *) -> void","const cmsUInt16Number[] In, cmsUInt16Number[] Out, const cmsPipeline * lut","void","void","Eval16nop1D(const cmsUInt16Number[], cmsUInt16Number[], const _cms_interp_struc *) -> void","const cmsUInt16Number[] Input, cmsUInt16Number[] Output, const _cms_interp_struc * p","void","void"
"cmsPipelineEval16","_cmsTransform2toTransformAdaptor","/src/lcms/src/cmslut.c","/src/lcms/src/cmsxform.c",1440,1443,661,661,"cmsPipelineEval16(const cmsUInt16Number[], cmsUInt16Number[], const cmsPipeline *) -> void","const cmsUInt16Number[] In, cmsUInt16Number[] Out, const cmsPipeline * lut","void","void","_cmsTransform2toTransformAdaptor(_cmstransform_struct *, const void *, void *, cmsUInt32Number, cmsUInt32Number, const cmsStride *) -> void","_cmstransform_struct * CMMcargo, const void * InputBuffer, void * OutputBuffer, cmsUInt32Number PixelsPerLine, cmsUInt32Number LineCount, const cmsStride * Stride","void","void"
"cmsPipelineEval16","NullFloatXFORM","/src/lcms/src/cmslut.c","/src/lcms/src/cmsxform.c",1440,1443,307,307,"cmsPipelineEval16(const cmsUInt16Number[], cmsUInt16Number[], const cmsPipeline *) -> void","const cmsUInt16Number[] In, cmsUInt16Number[] Out, const cmsPipeline * lut","void","void","NullFloatXFORM(_cmsTRANSFORM *, const void *, void *, cmsUInt32Number, cmsUInt32Number, const cmsStride *) -> void","_cmsTRANSFORM * p, const void * in, void * out, cmsUInt32Number PixelsPerLine, cmsUInt32Number LineCount, const cmsStride * Stride","void","void"
"cmsPipelineEval16","FloatXFORM","/src/lcms/src/cmslut.c","/src/lcms/src/cmsxform.c",1440,1443,241,241,"cmsPipelineEval16(const cmsUInt16Number[], cmsUInt16Number[], const cmsPipeline *) -> void","const cmsUInt16Number[] In, cmsUInt16Number[] Out, const cmsPipeline * lut","void","void","FloatXFORM(_cmsTRANSFORM *, const void *, void *, cmsUInt32Number, cmsUInt32Number, const cmsStride *) -> void","_cmsTRANSFORM * p, const void * in, void * out, cmsUInt32Number PixelsPerLine, cmsUInt32Number LineCount, const cmsStride * Stride","void","void"
"cmsPipelineEval16","NullXFORM","/src/lcms/src/cmslut.c","/src/lcms/src/cmsxform.c",1440,1443,346,346,"cmsPipelineEval16(const cmsUInt16Number[], cmsUInt16Number[], const cmsPipeline *) -> void","const cmsUInt16Number[] In, cmsUInt16Number[] Out, const cmsPipeline * lut","void","void","NullXFORM(_cmsTRANSFORM *, const void *, void *, cmsUInt32Number, cmsUInt32Number, const cmsStride *) -> void","_cmsTRANSFORM * p, const void * in, void * out, cmsUInt32Number PixelsPerLine, cmsUInt32Number LineCount, const cmsStride * Stride","void","void"
"cmsPipelineEval16","PrecalculatedXFORMGamutCheck","/src/lcms/src/cmslut.c","/src/lcms/src/cmsxform.c",1440,1443,447,447,"cmsPipelineEval16(const cmsUInt16Number[], cmsUInt16Number[], const cmsPipeline *) -> void","const cmsUInt16Number[] In, cmsUInt16Number[] Out, const cmsPipeline * lut","void","void","PrecalculatedXFORMGamutCheck(_cmsTRANSFORM *, const void *, void *, cmsUInt32Number, cmsUInt32Number, const cmsStride *) -> void","_cmsTRANSFORM * p, const void * in, void * out, cmsUInt32Number PixelsPerLine, cmsUInt32Number LineCount, const cmsStride * Stride","void","void"
"cmsPipelineEval16","PrecalculatedXFORM","/src/lcms/src/cmslut.c","/src/lcms/src/cmsxform.c",1440,1443,384,384,"cmsPipelineEval16(const cmsUInt16Number[], cmsUInt16Number[], const cmsPipeline *) -> void","const cmsUInt16Number[] In, cmsUInt16Number[] Out, const cmsPipeline * lut","void","void","PrecalculatedXFORM(_cmsTRANSFORM *, const void *, void *, cmsUInt32Number, cmsUInt32Number, const cmsStride *) -> void","_cmsTRANSFORM * p, const void * in, void * out, cmsUInt32Number PixelsPerLine, cmsUInt32Number LineCount, const cmsStride * Stride","void","void"
"cmsPipelineEval16","CachedXFORMGamutCheck","/src/lcms/src/cmslut.c","/src/lcms/src/cmsxform.c",1440,1443,541,541,"cmsPipelineEval16(const cmsUInt16Number[], cmsUInt16Number[], const cmsPipeline *) -> void","const cmsUInt16Number[] In, cmsUInt16Number[] Out, const cmsPipeline * lut","void","void","CachedXFORMGamutCheck(_cmsTRANSFORM *, const void *, void *, cmsUInt32Number, cmsUInt32Number, const cmsStride *) -> void","_cmsTRANSFORM * p, const void * in, void * out, cmsUInt32Number PixelsPerLine, cmsUInt32Number LineCount, const cmsStride * Stride","void","void"
"cmsPipelineEval16","CachedXFORM","/src/lcms/src/cmslut.c","/src/lcms/src/cmsxform.c",1440,1443,486,486,"cmsPipelineEval16(const cmsUInt16Number[], cmsUInt16Number[], const cmsPipeline *) -> void","const cmsUInt16Number[] In, cmsUInt16Number[] Out, const cmsPipeline * lut","void","void","CachedXFORM(_cmsTRANSFORM *, const void *, void *, cmsUInt32Number, cmsUInt32Number, const cmsStride *) -> void","_cmsTRANSFORM * p, const void * in, void * out, cmsUInt32Number PixelsPerLine, cmsUInt32Number LineCount, const cmsStride * Stride","void","void"
