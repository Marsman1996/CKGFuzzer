"caller","callee","caller_src","callee_src","start_body_start_line","start_body_end_line","end_body_start_line","end_body_end_line","caller_signature","caller_parameter_string","caller_return_type","caller_return_type_inferred","callee_signature","callee_parameter_string","callee_return_type","callee_return_type_inferred"
"EvaluateCLUTfloatIn16","__assert_fail","/src/lcms/src/cmslut.c","/usr/include/assert.h",452,462,69,69,"EvaluateCLUTfloatIn16(const cmsFloat32Number[], cmsFloat32Number[], const cmsStage *) -> void","const cmsFloat32Number[] In, cmsFloat32Number[] Out, const cmsStage * mpe","void","void","__assert_fail(const char *, const char *, unsigned int, const char *) -> void","const char * __assertion, const char * __file, unsigned int __line, const char * __function","void","void"
"EvaluateCLUTfloatIn16","DefaultEvalParametricFn","/src/lcms/src/cmslut.c","/src/lcms/src/cmsgamma.c",452,462,313,313,"EvaluateCLUTfloatIn16(const cmsFloat32Number[], cmsFloat32Number[], const cmsStage *) -> void","const cmsFloat32Number[] In, cmsFloat32Number[] Out, const cmsStage * mpe","void","void","DefaultEvalParametricFn(cmsInt32Number, const cmsFloat64Number[], cmsFloat64Number) -> cmsFloat64Number","cmsInt32Number Type, const cmsFloat64Number[] Params, cmsFloat64Number R","cmsFloat64Number","double"
"EvaluateCLUTfloatIn16","LinLerp1D","/src/lcms/src/cmslut.c","/src/lcms/src/cmsintrp.c",452,462,194,194,"EvaluateCLUTfloatIn16(const cmsFloat32Number[], cmsFloat32Number[], const cmsStage *) -> void","const cmsFloat32Number[] In, cmsFloat32Number[] Out, const cmsStage * mpe","void","void","LinLerp1D(const cmsUInt16Number[], cmsUInt16Number[], const cmsInterpParams *) -> void","const cmsUInt16Number[] Value, cmsUInt16Number[] Output, const cmsInterpParams * p","void","void"
"EvaluateCLUTfloatIn16","Eval1Input","/src/lcms/src/cmslut.c","/src/lcms/src/cmsintrp.c",452,462,267,267,"EvaluateCLUTfloatIn16(const cmsFloat32Number[], cmsFloat32Number[], const cmsStage *) -> void","const cmsFloat32Number[] In, cmsFloat32Number[] Out, const cmsStage * mpe","void","void","Eval1Input(const cmsUInt16Number[], cmsUInt16Number[], const cmsInterpParams *) -> void","const cmsUInt16Number[] Input, cmsUInt16Number[] Output, const cmsInterpParams * p16","void","void"
"EvaluateCLUTfloatIn16","BilinearInterp16","/src/lcms/src/cmslut.c","/src/lcms/src/cmsintrp.c",452,462,397,397,"EvaluateCLUTfloatIn16(const cmsFloat32Number[], cmsFloat32Number[], const cmsStage *) -> void","const cmsFloat32Number[] In, cmsFloat32Number[] Out, const cmsStage * mpe","void","void","BilinearInterp16(const cmsUInt16Number[], cmsUInt16Number[], const cmsInterpParams *) -> void","const cmsUInt16Number[] Input, cmsUInt16Number[] Output, const cmsInterpParams * p","void","void"
"EvaluateCLUTfloatIn16","TrilinearInterp16","/src/lcms/src/cmslut.c","/src/lcms/src/cmsintrp.c",452,462,528,528,"EvaluateCLUTfloatIn16(const cmsFloat32Number[], cmsFloat32Number[], const cmsStage *) -> void","const cmsFloat32Number[] In, cmsFloat32Number[] Out, const cmsStage * mpe","void","void","TrilinearInterp16(const cmsUInt16Number[], cmsUInt16Number[], const cmsInterpParams *) -> void","const cmsUInt16Number[] Input, cmsUInt16Number[] Output, const cmsInterpParams * p","void","void"
"EvaluateCLUTfloatIn16","TetrahedralInterp16","/src/lcms/src/cmslut.c","/src/lcms/src/cmsintrp.c",452,462,708,708,"EvaluateCLUTfloatIn16(const cmsFloat32Number[], cmsFloat32Number[], const cmsStage *) -> void","const cmsFloat32Number[] In, cmsFloat32Number[] Out, const cmsStage * mpe","void","void","TetrahedralInterp16(const cmsUInt16Number[], cmsUInt16Number[], const cmsInterpParams *) -> void","const cmsUInt16Number[] Input, cmsUInt16Number[] Output, const cmsInterpParams * p","void","void"
"EvaluateCLUTfloatIn16","Eval4Inputs","/src/lcms/src/cmslut.c","/src/lcms/src/cmsintrp.c",452,462,842,842,"EvaluateCLUTfloatIn16(const cmsFloat32Number[], cmsFloat32Number[], const cmsStage *) -> void","const cmsFloat32Number[] In, cmsFloat32Number[] Out, const cmsStage * mpe","void","void","Eval4Inputs(const cmsUInt16Number[], cmsUInt16Number[], const cmsInterpParams *) -> void","const cmsUInt16Number[] Input, cmsUInt16Number[] Output, const cmsInterpParams * p16","void","void"
"EvaluateCLUTfloatIn16","Eval5Inputs","/src/lcms/src/cmslut.c","/src/lcms/src/cmsintrp.c",452,462,1071,1071,"EvaluateCLUTfloatIn16(const cmsFloat32Number[], cmsFloat32Number[], const cmsStage *) -> void","const cmsFloat32Number[] In, cmsFloat32Number[] Out, const cmsStage * mpe","void","void","Eval5Inputs(const cmsUInt16Number[], cmsUInt16Number[], const cmsInterpParams *) -> void","const cmsUInt16Number[] Input, cmsUInt16Number[] Output, const cmsInterpParams * p16","void","void"
"EvaluateCLUTfloatIn16","Eval6Inputs","/src/lcms/src/cmslut.c","/src/lcms/src/cmsintrp.c",452,462,1160,1160,"EvaluateCLUTfloatIn16(const cmsFloat32Number[], cmsFloat32Number[], const cmsStage *) -> void","const cmsFloat32Number[] In, cmsFloat32Number[] Out, const cmsStage * mpe","void","void","Eval6Inputs(const cmsUInt16Number[], cmsUInt16Number[], const cmsInterpParams *) -> void","const cmsUInt16Number[] Input, cmsUInt16Number[] Output, const cmsInterpParams * p16","void","void"
"EvaluateCLUTfloatIn16","Eval7Inputs","/src/lcms/src/cmslut.c","/src/lcms/src/cmsintrp.c",452,462,1246,1246,"EvaluateCLUTfloatIn16(const cmsFloat32Number[], cmsFloat32Number[], const cmsStage *) -> void","const cmsFloat32Number[] In, cmsFloat32Number[] Out, const cmsStage * mpe","void","void","Eval7Inputs(const cmsUInt16Number[], cmsUInt16Number[], const cmsInterpParams *) -> void","const cmsUInt16Number[] Input, cmsUInt16Number[] Output, const cmsInterpParams * p16","void","void"
"EvaluateCLUTfloatIn16","Eval8Inputs","/src/lcms/src/cmslut.c","/src/lcms/src/cmsintrp.c",452,462,1332,1332,"EvaluateCLUTfloatIn16(const cmsFloat32Number[], cmsFloat32Number[], const cmsStage *) -> void","const cmsFloat32Number[] In, cmsFloat32Number[] Out, const cmsStage * mpe","void","void","Eval8Inputs(const cmsUInt16Number[], cmsUInt16Number[], const cmsInterpParams *) -> void","const cmsUInt16Number[] Input, cmsUInt16Number[] Output, const cmsInterpParams * p16","void","void"
"EvaluateCLUTfloatIn16","From16ToFloat","/src/lcms/src/cmslut.c","/src/lcms/src/cmslut.c",452,462,94,94,"EvaluateCLUTfloatIn16(const cmsFloat32Number[], cmsFloat32Number[], const cmsStage *) -> void","const cmsFloat32Number[] In, cmsFloat32Number[] Out, const cmsStage * mpe","void","void","From16ToFloat(const cmsUInt16Number[], cmsFloat32Number[], cmsUInt32Number) -> void","const cmsUInt16Number[] In, cmsFloat32Number[] Out, cmsUInt32Number n","void","void"
"EvaluateCLUTfloatIn16","FromFloatTo16","/src/lcms/src/cmslut.c","/src/lcms/src/cmslut.c",452,462,83,83,"EvaluateCLUTfloatIn16(const cmsFloat32Number[], cmsFloat32Number[], const cmsStage *) -> void","const cmsFloat32Number[] In, cmsFloat32Number[] Out, const cmsStage * mpe","void","void","FromFloatTo16(const cmsFloat32Number[], cmsUInt16Number[], cmsUInt32Number) -> void","const cmsFloat32Number[] In, cmsUInt16Number[] Out, cmsUInt32Number n","void","void"
"EvaluateCLUTfloatIn16","Eval16nop1D","/src/lcms/src/cmslut.c","/src/lcms/src/cmsopt.c",452,462,291,291,"EvaluateCLUTfloatIn16(const cmsFloat32Number[], cmsFloat32Number[], const cmsStage *) -> void","const cmsFloat32Number[] In, cmsFloat32Number[] Out, const cmsStage * mpe","void","void","Eval16nop1D(const cmsUInt16Number[], cmsUInt16Number[], const _cms_interp_struc *) -> void","const cmsUInt16Number[] Input, cmsUInt16Number[] Output, const _cms_interp_struc * p","void","void"
"EvaluateCLUTfloatIn16","_cmsTransform2toTransformAdaptor","/src/lcms/src/cmslut.c","/src/lcms/src/cmsxform.c",452,462,661,661,"EvaluateCLUTfloatIn16(const cmsFloat32Number[], cmsFloat32Number[], const cmsStage *) -> void","const cmsFloat32Number[] In, cmsFloat32Number[] Out, const cmsStage * mpe","void","void","_cmsTransform2toTransformAdaptor(_cmstransform_struct *, const void *, void *, cmsUInt32Number, cmsUInt32Number, const cmsStride *) -> void","_cmstransform_struct * CMMcargo, const void * InputBuffer, void * OutputBuffer, cmsUInt32Number PixelsPerLine, cmsUInt32Number LineCount, const cmsStride * Stride","void","void"
"EvaluateCLUTfloatIn16","NullFloatXFORM","/src/lcms/src/cmslut.c","/src/lcms/src/cmsxform.c",452,462,307,307,"EvaluateCLUTfloatIn16(const cmsFloat32Number[], cmsFloat32Number[], const cmsStage *) -> void","const cmsFloat32Number[] In, cmsFloat32Number[] Out, const cmsStage * mpe","void","void","NullFloatXFORM(_cmsTRANSFORM *, const void *, void *, cmsUInt32Number, cmsUInt32Number, const cmsStride *) -> void","_cmsTRANSFORM * p, const void * in, void * out, cmsUInt32Number PixelsPerLine, cmsUInt32Number LineCount, const cmsStride * Stride","void","void"
"EvaluateCLUTfloatIn16","FloatXFORM","/src/lcms/src/cmslut.c","/src/lcms/src/cmsxform.c",452,462,241,241,"EvaluateCLUTfloatIn16(const cmsFloat32Number[], cmsFloat32Number[], const cmsStage *) -> void","const cmsFloat32Number[] In, cmsFloat32Number[] Out, const cmsStage * mpe","void","void","FloatXFORM(_cmsTRANSFORM *, const void *, void *, cmsUInt32Number, cmsUInt32Number, const cmsStride *) -> void","_cmsTRANSFORM * p, const void * in, void * out, cmsUInt32Number PixelsPerLine, cmsUInt32Number LineCount, const cmsStride * Stride","void","void"
"EvaluateCLUTfloatIn16","NullXFORM","/src/lcms/src/cmslut.c","/src/lcms/src/cmsxform.c",452,462,346,346,"EvaluateCLUTfloatIn16(const cmsFloat32Number[], cmsFloat32Number[], const cmsStage *) -> void","const cmsFloat32Number[] In, cmsFloat32Number[] Out, const cmsStage * mpe","void","void","NullXFORM(_cmsTRANSFORM *, const void *, void *, cmsUInt32Number, cmsUInt32Number, const cmsStride *) -> void","_cmsTRANSFORM * p, const void * in, void * out, cmsUInt32Number PixelsPerLine, cmsUInt32Number LineCount, const cmsStride * Stride","void","void"
"EvaluateCLUTfloatIn16","PrecalculatedXFORMGamutCheck","/src/lcms/src/cmslut.c","/src/lcms/src/cmsxform.c",452,462,447,447,"EvaluateCLUTfloatIn16(const cmsFloat32Number[], cmsFloat32Number[], const cmsStage *) -> void","const cmsFloat32Number[] In, cmsFloat32Number[] Out, const cmsStage * mpe","void","void","PrecalculatedXFORMGamutCheck(_cmsTRANSFORM *, const void *, void *, cmsUInt32Number, cmsUInt32Number, const cmsStride *) -> void","_cmsTRANSFORM * p, const void * in, void * out, cmsUInt32Number PixelsPerLine, cmsUInt32Number LineCount, const cmsStride * Stride","void","void"
"EvaluateCLUTfloatIn16","PrecalculatedXFORM","/src/lcms/src/cmslut.c","/src/lcms/src/cmsxform.c",452,462,384,384,"EvaluateCLUTfloatIn16(const cmsFloat32Number[], cmsFloat32Number[], const cmsStage *) -> void","const cmsFloat32Number[] In, cmsFloat32Number[] Out, const cmsStage * mpe","void","void","PrecalculatedXFORM(_cmsTRANSFORM *, const void *, void *, cmsUInt32Number, cmsUInt32Number, const cmsStride *) -> void","_cmsTRANSFORM * p, const void * in, void * out, cmsUInt32Number PixelsPerLine, cmsUInt32Number LineCount, const cmsStride * Stride","void","void"
"EvaluateCLUTfloatIn16","CachedXFORMGamutCheck","/src/lcms/src/cmslut.c","/src/lcms/src/cmsxform.c",452,462,541,541,"EvaluateCLUTfloatIn16(const cmsFloat32Number[], cmsFloat32Number[], const cmsStage *) -> void","const cmsFloat32Number[] In, cmsFloat32Number[] Out, const cmsStage * mpe","void","void","CachedXFORMGamutCheck(_cmsTRANSFORM *, const void *, void *, cmsUInt32Number, cmsUInt32Number, const cmsStride *) -> void","_cmsTRANSFORM * p, const void * in, void * out, cmsUInt32Number PixelsPerLine, cmsUInt32Number LineCount, const cmsStride * Stride","void","void"
"EvaluateCLUTfloatIn16","CachedXFORM","/src/lcms/src/cmslut.c","/src/lcms/src/cmsxform.c",452,462,486,486,"EvaluateCLUTfloatIn16(const cmsFloat32Number[], cmsFloat32Number[], const cmsStage *) -> void","const cmsFloat32Number[] In, cmsFloat32Number[] Out, const cmsStage * mpe","void","void","CachedXFORM(_cmsTRANSFORM *, const void *, void *, cmsUInt32Number, cmsUInt32Number, const cmsStride *) -> void","_cmsTRANSFORM * p, const void * in, void * out, cmsUInt32Number PixelsPerLine, cmsUInt32Number LineCount, const cmsStride * Stride","void","void"
